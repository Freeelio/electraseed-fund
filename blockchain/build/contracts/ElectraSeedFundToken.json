{
  "fileName": "ElectraSeedFundToken.sol",
  "contractName": "ElectraSeedFundToken",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./TokenPoolManager.sol\";\n\n/**\n* @title ElectraSeed Fund Token\n* @dev ESF Token is an ERC20 fungible token with a bonding curve price function that\n* uses an ERC20 based stable coin as its reserve\n*/\ncontract ElectraSeedFundToken is ERC20BondingToken {\n\n  address public owner; //temp for development purposes only\n\n  function initialize(\n      ERC20 _reserveToken,\n      uint256 _initialPoolBalance,\n      uint256 _initialSupply,\n      uint32 _reserveRatio,\n      uint256 _gasPrice,\n      address _investmentPool,\n      string memory _name,\n      string memory _symbol,\n      uint8 _decimals)\n      public\n      initializer\n  {\n\n    ERC20BondingToken.initialize(\n        _reserveToken,\n        _initialPoolBalance,\n        _initialSupply,\n        _reserveRatio,\n        _gasPrice,\n        _investmentPool);\n\n    ERC20Detailed.initialize(\n        _name,\n        _symbol,\n        _decimals\n    );\n\n  }\n\n  /**\n  * @dev Allows patrons to purchase ESF tokens by depositing an amount of reserve tokens\n  * @param _amount The amount of reserve tokens to deposit\n  */\n  function buy(uint256 _amount) external {\n    require(_amount > 0, \"Failed: Amount must be greater than zero.\");\n    require(reserveToken.transferFrom(\n        msg.sender,\n        address(this),\n        _amount),\n        \"ERC20BondingToken: Failed to transfer tokens for mint.\");\n\n    _curvedMint(_amount);\n  }\n\n  /**\n  * @dev Allows token holders to sell their ESF holdings and collect a reimbursement\n  * @param _amount The amount of ESF tokens to burn\n  */\n  function sell(uint256 _amount) external {\n    require(_amount > 0, \"Failed: Amount must be greater than zero.\");\n    require(balanceOf(msg.sender) >= _amount,\n      \"ERC20BondingToken: Insuficient funds for sale amount.\");\n\n    uint256 reimbursement = _curvedBurn(_amount);\n\n    require(reserveToken.transfer(msg.sender, reimbursement),\n        \"ERC20BondingToken: Failed to transfer tokens for burn.\");\n  }\n\n  /**\n  * @dev Allows tokens holders to donate their own holdings without collecting\n  * a reimbursement, ie sponsored burning\n  * @param _amount The amount of ESF tokens to burn\n  */\n  function donate(uint256 _amount) external {\n    require(_amount > 0, \"Failed: Amount must be greater than zero.\");\n    require(balanceOf(msg.sender) >= _amount,\n      \"Failed: Insuficient funds for donation amount.\");\n\n    _curvedBurn(_amount);\n  }\n\n  /**\n  * @dev Allows depositing reserve tokens directly in the reserve pool without minting new tokens.\n  * A use case would be the recurring payments energy asset operators will make to ElectraSeed Fund\n  * @param _amount The amount of reserve tokens to deposit in the reserve pool\n  */\n  function refund(uint256 _amount) external {\n    require(_amount > 0, \"Failed: Amount must be greater than zero.\");\n    require(reserveToken.transferFrom(\n        msg.sender,\n        address(this),\n        _amount),\n        \"ERC20BondingToken: Failed to transfer tokens for refund.\");\n  }\n\n\n//temp admin functions for development purposes\n  /**\n  * @dev Allows the owner to update the gas price limit\n  * @param _gasPrice The new gas price\n  */\n  function setGasPrice(uint256 _gasPrice) external {\n    require(msg.sender == owner, \"This is an admin function\");\n\n    gasPrice = _gasPrice;\n  }\n\n  /**\n  * @dev Allows the owner to update the exit tribute\n  * @param _amount The new value for exit tax calculation\n  */\n  function setExitTribute(uint256 _amount) external {\n    require(msg.sender == owner, \"This is an admin function\");\n\n    exitTribute = _amount;\n  }\n\n  /**\n  * @dev Allows the owner to update the reserve / investment token pool split amount\n  * @param _amount The new value for exit tax calculation\n  */\n  function setPoolSplit(uint8 _amount) external {\n    require(msg.sender == owner, \"This is an admin function\");\n\n    poolSplit = _amount;\n  }\n\n  /**\n  * @dev Allows the owner to update the reserve token\n  * @param _token The new reserve token contract address\n  */\n  function setReserveToken(ERC20 _token) external {\n    require(msg.sender == owner, \"This is an admin function\");\n\n    reserveToken = _token;\n  }\n\n  /**\n  * @dev Allows the owner to update the TCR contract address that serves\n  * as the investment pool wallet\n  * @param _newPool The new investment pool address\n  */\n  function setInvestmentPool(address _newPool) external {\n    require(msg.sender == owner, \"This is an admin function\");\n\n    investmentPool = _newPool;\n  }\n\n  /**\n  * @dev Allows the owner to collect any wei sent to this contract\n  */\n  function dustCollector() external {\n    require(msg.sender == owner, \"This is an admin function\");\n\n    msg.sender.transfer(address(this).balance);\n  }\n\n\n}",
  "sourcePath": "contracts/ElectraSeedFundToken.sol",
  "sourceMap": "232:4455:17:-;;;212:25:11;;;-1:-1:-1;;212:25:11;236:1;212:25;;;-1:-1:-1;1682:31:15;;;;-1:-1:-1;464:34:18;;547:26;;;-1:-1:-1;;547:26:18;572:1;547:26;;;-1:-1:-1;;;;;3455:16:11;:55;-1:-1:-1;;;;;3520:16:11;:55;-1:-1:-1;;;;;3585:16:11;:55;-1:-1:-1;;;;;3650:16:11;:55;-1:-1:-1;;;;;3715:16:11;:55;-1:-1:-1;;;;;3780:16:11;:55;-1:-1:-1;;;;;3845:16:11;:55;-1:-1:-1;;;;;3910:16:11;:55;-1:-1:-1;;;;;3975:16:11;:55;-1:-1:-1;;;;;4040:16:11;:55;-1:-1:-1;;;;;4105:16:11;:55;-1:-1:-1;;;;;4170:16:11;:55;-1:-1:-1;;;;;4235:16:11;:55;-1:-1:-1;;;;;4300:16:11;:55;-1:-1:-1;;;;;4365:16:11;:55;-1:-1:-1;;;;;4430:16:11;:55;-1:-1:-1;;;;;4495:16:11;:55;-1:-1:-1;;;;;4560:16:11;:55;-1:-1:-1;;;;;4625:16:11;:55;-1:-1:-1;;;;;4690:16:11;:55;-1:-1:-1;;;;;4755:16:11;:55;-1:-1:-1;;;;;4820:16:11;:55;-1:-1:-1;;;;;4885:16:11;:55;-1:-1:-1;;;;;4950:16:11;:55;-1:-1:-1;;;;;5015:16:11;:55;-1:-1:-1;;;;;5080:16:11;:55;-1:-1:-1;;;;;5145:16:11;:55;-1:-1:-1;;;;;5210:16:11;:55;-1:-1:-1;;;;;5275:16:11;:55;-1:-1:-1;;;;;5340:16:11;:55;-1:-1:-1;;;;;5405:16:11;:55;-1:-1:-1;;;;;5470:16:11;:55;-1:-1:-1;;;;;5535:16:11;:55;-1:-1:-1;;;;;5600:16:11;:55;-1:-1:-1;;;;;5665:16:11;:55;-1:-1:-1;;;;;5730:16:11;:55;-1:-1:-1;;;;;5795:16:11;:55;-1:-1:-1;;;;;5860:16:11;:55;-1:-1:-1;;;;;5925:16:11;:55;-1:-1:-1;;;;;5990:16:11;:55;-1:-1:-1;;;;;6055:16:11;:55;-1:-1:-1;;;;;6120:16:11;:55;-1:-1:-1;;;;;6185:16:11;:55;-1:-1:-1;;;;;6250:16:11;:55;-1:-1:-1;;;;;6315:16:11;:55;6399:36;6380:16;:55;6464:36;6445:16;:55;6529:36;6510:16;:55;6594:36;6575:16;:55;6659:36;6640:16;:55;6724:36;6705:16;:55;6789:36;6770:16;:55;6854:36;6835:16;:55;6919:36;6900:16;:55;6984:36;6965:16;:55;7049:36;7030:16;:55;7114:36;7095:16;:55;7179:36;7160:16;:55;7244:36;7225:16;:55;7309:36;7290:16;:55;7374:36;7355:16;:55;7439:36;7420:16;:55;7504:36;7485:16;:55;-1:-1:-1;;;;;7550:16:11;:55;7634:36;7615:16;:55;7699:36;7680:16;:55;7764:36;7745:16;:55;7829:36;7810:16;:55;7894:36;7875:16;:55;7959:36;7940:16;:55;8024:36;8005:16;:55;8089:36;8070:16;:55;8154:36;8135:16;:55;8219:36;8200:16;:55;8284:36;8265:16;:55;8349:36;8330:16;:55;8414:36;8395:16;:55;8479:36;8460:16;:55;8544:36;8525:16;:55;8609:36;8590:16;:55;8674:36;8655:16;:55;8739:36;8720:16;:55;8804:36;8785:16;:55;8869:36;8850:16;:55;8934:36;8915:16;:55;8999:36;8980:16;:55;9064:36;9045:16;:55;9129:36;9110:16;:55;9194:36;9175:16;:55;9259:36;9240:16;:55;9324:36;9305:16;:55;9389:36;9370:16;:55;9454:36;9435:16;:55;9519:36;9500:16;:55;9584:36;9565:16;:55;9649:36;9630:16;:55;232:4455:17;;;;;;;;",
  "deployedSourceMap": "232:4455:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:4455:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1351:26:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;492:182:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:7;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:7;;;;;;;;-1:-1:-1;492:182:7;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:7;;-1:-1:-1;;;492:182:7;;;;;-1:-1:-1;492:182:7;;-1:-1:-1;492:182:7:i;:::-;;1636:89:5;;;:::i;:::-;;;;;;;;;;;;;;;;2207:232:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2207:232:15;;;;;;;;;;;;;;:::i;15344:806:11:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;15344:806:11;;;;;;;;;;;;;;;;;;;:::i;3184:300:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3184:300:5;;;;;;;;;;;;;;;;;:::i;2692:287:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2692:287:17;;:::i;10332:826:11:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;10332:826:11;;;;;;;;;;;;;;;;;;;:::i;1567:81:7:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3879:207:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:5;;;;;;;;:::i;685:140:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:8;;;;;;;;:::i;516:81:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;516:81:6;;:::i;357:29:18:-;;;:::i;:::-;;;;-1:-1:-1;;;;;357:29:18;;;;;;;;;;;;;;11789:1001:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;11789:1001:11;;;;;;;;;;;;;;;;;;;:::i;212:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2630:179:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2630:179:15;;:::i;1783:108:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:5;-1:-1:-1;;;;;1783:108:5;;:::i;13720:943:11:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;13720:943:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;654:101:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;654:101:6;;;;;;;;:::i;3978:144:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3978:144:17;-1:-1:-1;;;;;3978:144:17;;:::i;464:34:18:-;;;:::i;578:571::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;578:571:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;288:20:17:-;;;:::i;3712:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3712:140:17;;;;:::i;933:85:7:-;;;:::i;756:90:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:2;-1:-1:-1;;;;;756:90:2;;:::i;852:77::-;;;:::i;2443:183:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2443:183:15;;:::i;547:26:18:-;;;:::i;4573:258:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:5;;;;;;;;:::i;2094:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2094:155:5;;;;;;;;:::i;643:107:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:2;-1:-1:-1;;;;;643:107:2;;:::i;16834:981:11:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;16834:981:11;;;;;;;;;;;;;;;;;;;:::i;1438:118:18:-;;;:::i;4296:154:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4296:154:17;-1:-1:-1;;;;;4296:154:17;;:::i;3138:144::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3138:144:17;;:::i;4532:151::-;;;:::i;448:101:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:8;-1:-1:-1;;;;;448:101:8;;:::i;1235:114:18:-;;;:::i;350:582:17:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;350:582:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;350:582:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;350:582:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;350:582:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;350:582:17;;;;;;;;-1:-1:-1;350:582:17;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;350:582:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;350:582:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;350:582:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;350:582:17;;-1:-1:-1;;;350:582:17;;;;;-1:-1:-1;350:582:17;;-1:-1:-1;350:582:17:i;1095:309::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1095:309:17;;:::i;2307:132:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:5;;;;;;;;;;:::i;1556:407:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1556:407:17;;:::i;2151:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2151:248:17;;:::i;294:25:18:-;;;:::i;3408:146:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3408:146:17;;:::i;1682:31:15:-;;;:::i;739:81:7:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2577:149:5:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:5;2577:149;;;;;:::o;1351:26:15:-;;;;;;:::o;492:182:7:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:7;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:7;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:7;:20;;-1:-1:-1;;647:20:7;;;;;;;1264:55:10;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;1264:55;492:182:7;;;;:::o;1636:89:5:-;1706:12;;1636:89;:::o;2207:232:15:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;2340:12:15;:28;;-1:-1:-1;;2340:28:15;;;;;;;2374:8;:20;;;2401:33;2407:10;2419:14;2401:5;:33::i;:::-;1268:14:10;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;2207:232:15;;;;:::o;15344:806:11:-;15471:7;15534:1;15524:7;:11;:34;;;;;15557:1;15539:15;:19;15524:34;:53;;;;;15576:1;15562:11;:15;;;15524:53;:85;;;;-1:-1:-1;15596:13:11;15581:28;;;;;15524:85;15516:94;;;;;;15662:12;15658:38;;-1:-1:-1;15695:1:11;15688:8;;15658:38;15761:24;;;318:7;15761:24;15757:97;;;15843:7;15838:1;15807:28;:7;15819:15;15807:28;:11;:28;:::i;:::-;:32;15806:44;;;;;;15853:1;15806:48;15799:55;;;;15757:97;15865:14;;;15930:20;:7;15942;15930:20;:11;:20;:::i;:::-;15914:36;;15982:45;15988:5;15995:7;318;16015:11;15982:5;:45::i;:::-;15960:67;;-1:-1:-1;15960:67:11;-1:-1:-1;16037:12:11;16053:46;;;16084:1;16054:27;:15;15960:67;16054:27;:19;:27;:::i;:::-;:31;16053:46;;16121:22;;;16103:1;16121:22;;-1:-1:-1;;;;;15344:806:11;;;;;;;:::o;3184:300:5:-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:5;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:5;;;;;;;;;;;;-1:-1:-1;3366:33:5;;;:89;;:37;:89;:::i;:::-;3335:8;:121::i;:::-;-1:-1:-1;3473:4:5;3184:300;;;;;:::o;2692:287:17:-;2758:1;2748:7;:11;2740:65;;;;-1:-1:-1;;;2740:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:12;;:86;;;-1:-1:-1;;;2819:86:17;;2854:10;2819:86;;;;2882:4;2819:86;;;;;;;;;;;;-1:-1:-1;;;;;2819:12:17;;;;:25;;:86;;;;;;;;;;;;;;;:12;;:86;;;5:2:-1;;;;30:1;27;20:12;5:2;2819:86:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2819:86:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2819:86:17;2811:163;;;;-1:-1:-1;;;2811:163:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:287;:::o;10332:826:11:-;10474:7;10537:1;10527:7;:11;:34;;;;;10560:1;10542:15;:19;10527:34;:55;;;;;10581:1;10565:13;:17;;;10527:55;:85;;;;-1:-1:-1;318:7:11;10586:26;;;;;10527:85;10519:94;;;;;;10673:19;10669:45;;-1:-1:-1;10713:1:11;10706:8;;10669:45;10773:26;;;318:7;10773:26;10769:96;;;10850:15;10820:27;:7;10832:14;10820:27;:11;:27;:::i;:::-;:45;;;;;;10813:52;;;;10769:96;10876:14;;;10941:35;:14;10960:15;10941:35;:18;:35;:::i;:::-;10925:51;;11008:55;11014:5;11021:15;11038:13;318:7;11008:5;:55::i;:::-;10986:77;;-1:-1:-1;10986:77:11;-1:-1:-1;11073:12:11;11088:32;;;:19;:7;10986:77;11088:19;:11;:19;:::i;:::-;:32;;11137:14;;;;;10332:826;-1:-1:-1;;;;;;;;10332:826:11:o;1567:81:7:-;1632:9;;;;1567:81;:::o;3879:207:5:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:5;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:8:-;759:4;544:22:2;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:8;781:7;790:6;775:5;:22::i;516:81:6:-;563:27;569:12;:10;:12::i;:::-;583:6;563:5;:27::i;357:29:18:-;;;-1:-1:-1;;;;;357:29:18;;:::o;11789:1001:11:-;11924:7;11987:1;11977:7;:11;:34;;;;;12010:1;11992:15;:19;11977:34;:55;;;;;12031:1;12015:13;:17;;;11977:55;:85;;;;-1:-1:-1;318:7:11;12036:26;;;;;11977:85;:111;;;;;12081:7;12066:11;:22;;11977:111;11969:120;;;;;;12146:16;12142:42;;-1:-1:-1;12183:1:11;12176:8;;12142:42;12268:7;12253:11;:22;12249:62;;;-1:-1:-1;12296:15:11;12289:22;;12249:62;12370:26;;;318:7;12370:26;12366:93;;;12452:7;12417:32;:15;12437:11;12417:32;:19;:32;:::i;12366:93::-;12470:14;;12535:21;;;12588:47;12535:7;:21;318:7;12621:13;12588:5;:47::i;:::-;12566:69;;-1:-1:-1;12566:69:11;-1:-1:-1;12645:13:11;12661:27;:15;12566:69;12661:27;:19;:27;:::i;:::-;12645:43;-1:-1:-1;12714:28:11;;;;;;12777:6;12760:13;;;12777:6;12759:24;;;;;;11789:1001;-1:-1:-1;;;;;;;;;;11789:1001:11:o;212:25::-;;;;;;:::o;2630:179:15:-;2703:7;2725:79;2745:13;:11;:13::i;:::-;2760:20;:18;:20::i;:::-;2782:12;;;;2796:7;2725:19;:79::i;:::-;2718:86;;2630:179;;;;:::o;1783:108:5:-;-1:-1:-1;;;;;1866:18:5;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;13720:943:11:-;13901:7;13976:1;13954:19;:23;:48;;;;;14001:1;13981:17;:21;;;13954:48;:82;;;;-1:-1:-1;318:7:11;14006:30;;;;;13954:82;:107;;;;;14060:1;14040:17;:21;13954:107;:130;;;;;14083:1;14065:15;:19;;;13954:130;:162;;;;-1:-1:-1;318:7:11;14088:28;;;;;13954:162;13946:171;;;;;;14194:15;14173:36;;:17;:36;;;14169:126;;;14263:32;:19;14287:7;14263:32;:23;:32;:::i;:::-;14230:30;:17;14252:7;14230:30;:21;:30;:::i;:::-;:65;;;;;;14223:72;;;;14169:126;14306:14;;;14371:32;:19;14395:7;14371:32;:23;:32;:::i;:::-;14355:48;;14435:69;14441:5;14448:19;14469:17;14488:15;14435:5;:69::i;:::-;14413:91;;-1:-1:-1;14413:91:11;-1:-1:-1;14514:13:11;14530:29;:17;14413:91;14530:29;:21;:29;:::i;:::-;14514:45;-1:-1:-1;14585:30:11;;;;;;14650:6;14633:13;;;14650:6;14632:24;;;;;14625:31;;;;;;;13720:943;;;;;;;;:::o;654:101:6:-;722:26;732:7;741:6;722:9;:26::i;:::-;654:101;;:::o;3978:144:17:-;4054:5;;;;;-1:-1:-1;;;;;4054:5:17;4040:10;:19;4032:57;;;;;-1:-1:-1;;;4032:57:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4032:57:17;;;;;;;;;;;;;;;4096:12;:21;;-1:-1:-1;;;;;;4096:21:17;-1:-1:-1;;;;;4096:21:17;;;;;;;;;;3978:144::o;464:34:18:-;;;;:::o;578:571::-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;814:12:18;:28;;-1:-1:-1;;;;;814:28:18;;;-1:-1:-1;;;;;;814:28:18;;;;;;;;848:14;:32;;;;;;;;;;;;;;895:98;;;-1:-1:-1;;;895:98:18;;930:10;895:98;;;;958:4;895:98;;;;;;;;;;;;:12;;;;;:25;;:98;;;;;;;;;;;;;;;814:12;895;:98;;;5:2:-1;;;;30:1;27;20:12;5:2;895:98:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;895:98:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;895:98:18;887:180;;;;-1:-1:-1;;;887:180:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:70;1103:14;1119:13;1134:9;1074:28;:70::i;:::-;1268:14:10;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;1264:55;578:571:18;;;;;;;:::o;288:20:17:-;;;;;;-1:-1:-1;;;;;288:20:17;;:::o;3712:140::-;3786:5;;;;;-1:-1:-1;;;;;3786:5:17;3772:10;:19;3764:57;;;;;-1:-1:-1;;;3764:57:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3764:57:17;;;;;;;;;;;;;;;3828:9;:19;;-1:-1:-1;;3828:19:17;;;;;;;;;;;;3712:140::o;933:85:7:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:2;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;2443:183:15:-;2516:7;2538:83;2562:13;:11;:13::i;:::-;2577:20;:18;:20::i;:::-;2599:12;;;;2613:7;2538:23;:83::i;547:26:18:-;;;;;;:::o;4573:258:5:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:5;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2094:155::-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;643:107:2:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;16834:981:11:-;16968:7;17031:1;17021:7;:11;:34;;;;;17054:1;17036:15;:19;17021:34;:53;;;;;17073:1;17059:11;:15;;;17021:53;:85;;;;-1:-1:-1;17093:13:11;17078:28;;;;;17021:85;:107;;;;;17121:7;17110;:18;;17021:107;17013:116;;;;;;17181:12;17177:38;;-1:-1:-1;17214:1:11;17207:8;;17177:38;17299:7;17288;:18;17284:58;;;-1:-1:-1;17327:15:11;17320:22;;17284:58;17407:24;;;318:7;17407:24;17403:87;;;17483:7;17452:28;:7;17464:15;17452:28;:11;:28;:::i;1438:118:18:-;1513:12;;1536:14;;1513:38;;;-1:-1:-1;;;1513:38:18;;-1:-1:-1;;;;;1536:14:18;;;1513:38;;;;;;1491:7;;1513:12;;;;;:22;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1513:38:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1513:38:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1513:38:18;;-1:-1:-1;1438:118:18;:::o;4296:154:17:-;4378:5;;;;;-1:-1:-1;;;;;4378:5:17;4364:10;:19;4356:57;;;;;-1:-1:-1;;;4356:57:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4356:57:17;;;;;;;;;;;;;;;4420:14;:25;;-1:-1:-1;;;;;;4420:25:17;-1:-1:-1;;;;;4420:25:17;;;;;;;;;;4296:154::o;3138:144::-;3215:5;;;;;-1:-1:-1;;;;;3215:5:17;3201:10;:19;3193:57;;;;;-1:-1:-1;;;3193:57:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3193:57:17;;;;;;;;;;;;;;;3257:8;:20;3138:144::o;4532:151::-;4594:5;;;;;-1:-1:-1;;;;;4594:5:17;4580:10;:19;4572:57;;;;;-1:-1:-1;;;4572:57:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4572:57:17;;;;;;;;;;;;;;;4636:42;;:10;;4664:4;4656:21;4636:42;;;;;;;;;4656:21;4636:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;448:101:8;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:8;535:6;513:21;:29::i;:::-;1268:14:10;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;448:101:8;;:::o;1235:114:18:-;1307:12;;:37;;;-1:-1:-1;;;1307:37:18;;1338:4;1307:37;;;;;;1285:7;;-1:-1:-1;;;;;1307:12:18;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;5:2:-1;;;;30:1;27;20:12;350:582:17;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;666:172:17;704:13;727:19;756:14;780:13;803:9;822:15;666:28;:172::i;:::-;845:81;879:5;894:7;911:9;845:24;:81::i;:::-;1268:14:10;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;1264:55;350:582:17;;;;;;;;;;:::o;1095:309::-;1158:1;1148:7;:11;1140:65;;;;-1:-1:-1;;;1140:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:12;;:86;;;-1:-1:-1;;;1219:86:17;;1254:10;1219:86;;;;1282:4;1219:86;;;;;;;;;;;;-1:-1:-1;;;;;1219:12:17;;;;:25;;:86;;;;;;;;;;;;;;;:12;;:86;;;5:2:-1;;;;30:1;27;20:12;5:2;1219:86:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1219:86:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1219:86:17;1211:161;;;;-1:-1:-1;;;1211:161:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:20;1391:7;1379:11;:20::i;2307:132:5:-;-1:-1:-1;;;;;2405:18:5;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;1556:407:17:-;1620:1;1610:7;:11;1602:65;;;;-1:-1:-1;;;1602:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:7;1681:21;1691:10;1681:9;:21::i;:::-;:32;;1673:104;;;;-1:-1:-1;;;1673:104:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1784:21;1808:20;1820:7;1808:11;:20::i;:::-;1843:12;;:48;;;-1:-1:-1;;;1843:48:17;;1865:10;1843:48;;;;;;;;;;;;1784:44;;-1:-1:-1;;;;;;1843:12:17;;;;:21;;:48;;;;;;;;;;;;;;;:12;;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;1843:48:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1843:48:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1843:48:17;1835:123;;;;-1:-1:-1;;;1835:123:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:248;2217:1;2207:7;:11;2199:65;;;;-1:-1:-1;;;2199:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:7;2278:21;2288:10;2278:9;:21::i;:::-;:32;;2270:97;;;;-1:-1:-1;;;2270:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:20;2386:7;2374:11;:20::i;294:25:18:-;;;-1:-1:-1;;;;;294:25:18;;:::o;3408:146:17:-;3486:5;;;;;-1:-1:-1;;;;;3486:5:17;3472:10;:19;3464:57;;;;;-1:-1:-1;;;3464:57:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3464:57:17;;;;;;;;;;;;;;;3528:11;:21;3408:146::o;1682:31:15:-;;;;:::o;867:96:0:-;946:10;867:96;:::o;7428:332:5:-;-1:-1:-1;;;;;7521:19:5;;7513:68;;;;-1:-1:-1;;;7513:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7599:21:5;;7591:68;;;;-1:-1:-1;;;7591:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7670:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7721:32;;;;;;;;;;;;;;;;;7428:332;;;:::o;1409:498:10:-;1820:4;1864:17;1895:7;1409:498;:::o;6039:302:5:-;-1:-1:-1;;;;;6114:21:5;;6106:65;;;;;-1:-1:-1;;;6106:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:5;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:5;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;6297:37;;;;;;;;;;6039:302;;:::o;1038:226:12:-;1098:7;1149;1145:33;;-1:-1:-1;1177:1:12;1170:8;;1145:33;1201:7;;;1206:2;1201;:7;:2;1226:6;;;;;:12;1218:21;;;;;;1256:1;1038:226;-1:-1:-1;;;1038:226:12:o;335:149::-;395:7;426;;;451;;;;443:16;;;;;19385:771:11;19483:7;19492:5;-1:-1:-1;;;19517:6:11;:16;19509:25;;;;;;19545:15;19570:12;19604:6;-1:-1:-1;;;19585:6:11;:16;:25;;;;;;19570:40;;1108:35;19624:4;:22;19620:144;;;19672:16;19683:4;19672:10;:16::i;:::-;19662:26;;19620:144;;;19737:16;19748:4;19737:10;:16::i;:::-;19727:26;;19620:144;19774:23;19818:5;19800:23;;19810:5;19800:15;;:7;:15;:23;;;;;;19774:49;;-1:-1:-1;;;19837:15:11;:33;19833:317;;;19894:27;19905:15;19894:10;:27::i;:::-;417:3;19886:51;;;;;;;;;19833:317;19976:15;19994:42;20020:15;19994:25;:42::i;:::-;19976:60;;20058:69;20105:9;417:3;20089:25;20069:46;;:15;:46;;20117:9;20058:10;:69::i;:::-;20050:89;-1:-1:-1;20129:9:11;-1:-1:-1;20050:89:11;;-1:-1:-1;;;20050:89:11;19385:771;;;;;;;;:::o;5305:464:5:-;-1:-1:-1;;;;;5402:20:5;;5394:70;;;;-1:-1:-1;;;5394:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:5;;5474:71;;;;-1:-1:-1;;;5474:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:5;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:5;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:5;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;;;;;;;;;;5305:464;;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;6661:342:5;-1:-1:-1;;;;;6736:21:5;;6728:67;;;;-1:-1:-1;;;6728:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6827:68;6850:6;6827:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6827:18:5;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6806:18:5;;;;;;:9;:18;;;;;:89;6920:12;;:24;;6937:6;6920:24;:16;:24;:::i;:::-;6905:12;:39;6959:37;;;;;;;;6985:1;;-1:-1:-1;;;;;6959:37:5;;;;;;;;;;;;6661:342;;:::o;7938:229::-;8009:22;8015:7;8024:6;8009:5;:22::i;:::-;8041:119;8050:7;8059:12;:10;:12::i;:::-;8073:86;8112:6;8073:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8073:20:5;;;;;;:11;:20;;;;;;8094:12;:10;:12::i;935:119:2:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:2;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:2;;;;;;;;1060:127;:::o;779:200:1:-;851:4;-1:-1:-1;;;;;875:21:1;;867:68;;;;-1:-1:-1;;;867:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:1;:11;:20;;;;;;;;;;;;;;;779:200::o;361:137:2:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:2;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;2847:120:15:-;2904:7;2926:36;2941:10;2953:8;2926:14;:36::i;3334:118::-;3390:7;3412:35;3427:10;3439:7;3412:14;:35::i;27757:2770:11:-;27811:7;;;;;27923:34;27918:39;;27914:143;;-1:-1:-1;;;27960:41:11;;;;28021:34;-1:-1:-1;;;28007:1:11;:11;:48;;;;;;28003:52;;27914:143;28090:34;28085:1;:39;28081:143;;-1:-1:-1;;;28127:41:11;;;;28188:34;-1:-1:-1;;;28174:1:11;:11;:48;;;;;;28170:52;;28081:143;28257:34;28252:1;:39;28248:143;;-1:-1:-1;;;28294:41:11;;;;28355:34;-1:-1:-1;;;28341:1:11;:11;:48;;;;;;28337:52;;28248:143;28424:34;28419:1;:39;28415:143;;-1:-1:-1;;;28461:41:11;;;;28522:34;-1:-1:-1;;;28508:1:11;:11;:48;;;;;;28504:52;;28415:143;28591:34;28586:1;:39;28582:143;;-1:-1:-1;;;28628:41:11;;;;28689:34;-1:-1:-1;;;28675:1:11;:11;:48;;;;;;28671:52;;28582:143;28758:34;28753:1;:39;28749:143;;-1:-1:-1;;;28795:41:11;;;;28856:34;-1:-1:-1;;;28842:1:11;:11;:48;;;;;;28838:52;;28749:143;28925:34;28920:1;:39;28916:143;;-1:-1:-1;;;28962:41:11;;;;29023:34;-1:-1:-1;;;29009:1:11;:11;:48;;;;;;29005:52;;28916:143;29092:34;29087:1;:39;29083:143;;-1:-1:-1;;;29129:41:11;;;;29190:34;-1:-1:-1;;;29176:1:11;:11;:48;;;;;;29172:52;;29083:143;-1:-1:-1;;29259:11:11;;;-1:-1:-1;29259:11:11;;-1:-1:-1;;;;29284:5:11;;;:15;;-1:-1:-1;;;;29321:39:11;;;29316:45;;:83;29309:90;;;;-1:-1:-1;;;29409:1:11;29405;:5;:15;;;;;;29401:19;;-1:-1:-1;;;29509:1:11;29471:35;:39;29466:1;:45;:83;;;;;;29459:90;;;;-1:-1:-1;;;29559:1:11;29555;:5;:15;;;;;;29551:19;;-1:-1:-1;;;29659:1:11;29621:35;:39;29616:1;:45;:83;;;;;;29609:90;;;;-1:-1:-1;;;29709:1:11;29705;:5;:15;;;;;;29701:19;;-1:-1:-1;;;29809:1:11;29771:35;:39;29766:1;:45;:83;;;;;;29759:90;;;;-1:-1:-1;;;29859:1:11;29855;:5;:15;;;;;;29851:19;;-1:-1:-1;;;29959:1:11;29921:35;:39;29916:1;:45;:83;;;;;;29909:90;;;;-1:-1:-1;;;30009:1:11;30005;:5;:15;;;;;;30001:19;;-1:-1:-1;;;30109:1:11;30071:35;:39;30066:1;:45;:83;;;;;;30059:90;;;;-1:-1:-1;;;30159:1:11;30155;:5;:15;;;;;;30151:19;;-1:-1:-1;;;30259:1:11;30221:35;:39;30216:1;:45;:83;;;;;;30209:90;;;;-1:-1:-1;;;30309:1:11;30305;:5;:15;;;;;;30301:19;;-1:-1:-1;;;30409:1:11;30371:35;:39;30366:1;:45;:83;;;;;;30359:90;;;;;27757:2770;-1:-1:-1;;;;;27757:2770:11:o;20327:801::-;20381:7;;-1:-1:-1;;;20521:12:11;;20517:152;;20549:11;20563:22;-1:-1:-1;;;20573:1:11;:11;20563:9;:22::i;:::-;20599:11;;;;;;-1:-1:-1;;;20643:15:11;;-1:-1:-1;;20517:152:11;-1:-1:-1;;;20774:1:11;:11;20770:297;;;417:3;20801:256;20831:5;;;;20801:256;;-1:-1:-1;;;20866:5:11;;;20865:17;20861:21;;-1:-1:-1;;;20921:1:11;:12;20917:126;;20963:1;20957:7;;;;21010:14;-1:-1:-1;;21018:5:11;;21010:14;;21003:21;;;;;20917:126;-1:-1:-1;;20838:3:11;20801:256;;;;20770:297;921:33;839;21084:19;;:37;;20327:801;-1:-1:-1;;;20327:801:11:o;31211:3179::-;31265:7;31640:18;-1:-1:-1;;;31357:38:11;;;31440:5;;;:15;;;31526:5;;;:15;;;31612:5;;;:15;;;31636:22;;;31468:18;31464:22;;;31554:18;31550:22;;;;31543:29;31629;;31357:38;;31698:5;;;:15;31694:19;;31722:1;31726:18;31722:22;31715:29;;;;-1:-1:-1;;;31788:1:11;31784;:5;:15;;;;;;31780:19;;31808:1;31812:18;31808:22;31801:29;;;;-1:-1:-1;;;31874:1:11;31870;:5;:15;;;;;;31866:19;;31894:1;31898:18;31894:22;31887:29;;;;-1:-1:-1;;;31960:1:11;31956;:5;:15;;;;;;31952:19;;31980:1;31984:18;31980:22;31973:29;;;;-1:-1:-1;;;32046:1:11;32042;:5;:15;;;;;;32038:19;;32066:1;32070:18;32066:22;32059:29;;;;-1:-1:-1;;;32132:1:11;32128;:5;:15;;;;;;32124:19;;32152:1;32156:18;32152:22;32145:29;;;;-1:-1:-1;;;32218:1:11;32214;:5;:15;;;;;;32210:19;;32238:1;32242:18;32238:22;32231:29;;;;-1:-1:-1;;;32304:1:11;32300;:5;:15;;;;;;32296:19;;32324:1;32328:18;32324:22;32317:29;;;;-1:-1:-1;;;32390:1:11;32386;:5;:15;;;;;;32382:19;;32410:1;32414:18;32410:22;32403:29;;;;-1:-1:-1;;;32476:1:11;32472;:5;:15;;;;;;32468:19;;32496:1;32500:18;32496:22;32489:29;;;;-1:-1:-1;;;32562:1:11;32558;:5;:15;;;;;;32554:19;;32582:1;32586:18;32582:22;32575:29;;;;-1:-1:-1;;;32648:1:11;32644;:5;:15;;;;;;32640:19;;32668:1;32672:18;32668:22;32661:29;;;;-1:-1:-1;;;32734:1:11;32730;:5;:15;;;;;;32726:19;;32754:1;32758:18;32754:22;32747:29;;;;-1:-1:-1;;;32820:1:11;32816;:5;:15;;;;;;32812:19;;32840:1;32844:18;32840:22;32833:29;;;;-1:-1:-1;;;32906:1:11;32902;:5;:15;;;;;;32898:19;;32926:1;32930:18;32926:22;32919:29;;;;-1:-1:-1;;;32992:1:11;32988;:5;:15;;;;;33082:18;32988:15;;;33005:29;;;33076:24;:28;;-1:-1:-1;;;33076:38:11;;32988:15;-1:-1:-1;;;;33180:39:11;;33179:46;33175:137;;33277:35;33239;33233:41;;:79;33227:85;;33175:137;-1:-1:-1;;;33351:39:11;;33350:46;33346:137;;33448:35;33410;33404:41;;:79;33398:85;;33346:137;-1:-1:-1;;;33522:39:11;;33521:46;33517:137;;33619:35;33581;33575:41;;:79;33569:85;;33517:137;-1:-1:-1;;;33693:39:11;;33692:46;33688:137;;33790:35;33752;33746:41;;:79;33740:85;;33688:137;-1:-1:-1;;;33864:39:11;;33863:46;33859:137;;33961:35;33923;33917:41;;:79;33911:85;;33859:137;-1:-1:-1;;;34035:39:11;;34034:46;34030:137;;34132:35;34094;34088:41;;:79;34082:85;;34030:137;-1:-1:-1;;;34206:39:11;;34205:46;34201:137;;34303:35;34265;34259:41;;:79;34253:85;;34201:137;-1:-1:-1;34380:3:11;;31211:3179;-1:-1:-1;;;31211:3179:11:o;22138:501::-;22208:5;370:2;417:3;22294:179;22310:2;22301:11;;:2;22306:1;22301:6;:11;;;22294:179;;;22328:9;22352:1;22340:13;22341:7;;;22340:13;;22328:25;;22391:2;22371:11;22383:3;22371:16;;;;;;;;;;;:22;22367:95;;22416:3;22411:8;;22367:95;;;22459:3;22454:8;;22367:95;22294:179;;;;22506:2;22487:11;22499:2;22487:15;;;;;;;;;;;:21;22483:48;;22529:2;-1:-1:-1;22522:9:11;;-1:-1:-1;22522:9:11;22483:48;22564:2;22545:11;22557:2;22545:15;;;;;;;;;;;:21;22541:48;;-1:-1:-1;22587:2:11;-1:-1:-1;22580:9:11;;23202:3826;23275:7;23294:10;23307:2;23294:15;;23319:11;23333:1;23319:15;;23363:10;23350:23;;23356:2;23351;:7;23350:23;;23345:28;;23382:2;23387:33;23382:38;23375:45;;;;23474:10;23461:23;;23467:2;23462;:7;23461:23;;23456:28;;23493:2;23498:33;23493:38;23486:45;;;;23585:10;23572:23;;23578:2;23573;:7;23572:23;;23567:28;;23604:2;23609:33;23604:38;23597:45;;;;23696:10;23683:23;;23689:2;23684;:7;23683:23;;23678:28;;23715:2;23720:33;23715:38;23708:45;;;;23807:10;23794:23;;23800:2;23795;:7;23794:23;;23789:28;;23826:2;23831:33;23826:38;23819:45;;;;23918:10;23905:23;;23911:2;23906;:7;23905:23;;23900:28;;23937:2;23942:33;23937:38;23930:45;;;;24029:10;24016:23;;24022:2;24017;:7;24016:23;;24011:28;;24048:2;24053:33;24048:38;24041:45;;;;24140:10;24127:23;;24133:2;24128;:7;24127:23;;24122:28;;24159:2;24164:33;24159:38;24152:45;;;;24251:10;24238:23;;24244:2;24239;:7;24238:23;;24233:28;;24270:2;24275:33;24270:38;24263:45;;;;24362:10;24349:23;;24355:2;24350;:7;24349:23;;24344:28;;24381:2;24386:33;24381:38;24374:45;;;;24473:10;24460:23;;24466:2;24461;:7;24460:23;;24455:28;;24492:2;24497:33;24492:38;24485:45;;;;24584:10;24571:23;;24577:2;24572;:7;24571:23;;24566:28;;24603:2;24608:33;24603:38;24596:45;;;;24695:10;24682:23;;24688:2;24683;:7;24682:23;;24677:28;;24714:2;24719:33;24714:38;24707:45;;;;24806:10;24793:23;;24799:2;24794;:7;24793:23;;24788:28;;24825:2;24830:33;24825:38;24818:45;;;;24917:10;24904:23;;24910:2;24905;:7;24904:23;;24899:28;;24936:2;24941:33;24936:38;24929:45;;;;25028:10;25015:23;;25021:2;25016;:7;25015:23;;25010:28;;25047:2;25052:33;25047:38;25040:45;;;;25139:10;25126:23;;25132:2;25127;:7;25126:23;;25121:28;;25158:2;25163:33;25158:38;25151:45;;;;25250:10;25237:23;;25243:2;25238;:7;25237:23;;25232:28;;25269:2;25274:33;25269:38;25262:45;;;;25361:10;25348:23;;25354:2;25349;:7;25348:23;;25343:28;;25380:2;25385:33;25380:38;25373:45;;;;25472:10;25459:23;;25465:2;25460;:7;25459:23;;25454:28;;25491:2;25496:33;25491:38;25484:45;;;;25583:10;25570:23;;25576:2;25571;:7;25570:23;;25565:28;;25602:2;25607:33;25602:38;25595:45;;;;25694:10;25681:23;;25687:2;25682;:7;25681:23;;25676:28;;25713:2;25718:33;25713:38;25706:45;;;;25805:10;25792:23;;25798:2;25793;:7;25792:23;;25787:28;;25824:2;25829:33;25824:38;25817:45;;;;25916:10;25903:23;;25909:2;25904;:7;25903:23;;25898:28;;25935:2;25940:33;25935:38;25928:45;;;;26027:10;26014:23;;26020:2;26015;:7;26014:23;;26009:28;;26046:2;26051:33;26046:38;26039:45;;;;26138:10;26125:23;;26131:2;26126;:7;26125:23;;26120:28;;26157:2;26162:33;26157:38;26150:45;;;;26249:10;26236:23;;26242:2;26237;:7;26236:23;;26231:28;;26268:2;26273:33;26268:38;26261:45;;;;26360:10;26347:23;;26353:2;26348;:7;26347:23;;26342:28;;26379:2;26384:33;26379:38;26372:45;;;;26471:10;26458:23;;26464:2;26459;:7;26458:23;;26453:28;;26490:2;26495:33;26490:38;26483:45;;;;26582:10;26569:23;;26575:2;26570;:7;26569:23;;26564:28;;26601:2;26606:33;26601:38;26594:45;;;;26693:10;26680:23;;26686:2;26681;:7;26680:23;;26675:28;;26712:2;26717:33;26712:38;26705:45;;;;26804:10;26791:23;;26797:2;26792;:7;26791:23;;26786:28;;26823:2;26828:33;26823:38;26816:45;;;;26960:10;26953:17;;275:1;26953:17;;26947:2;26911:33;26905:3;:39;;;;;;:44;:66;;23202:3826;-1:-1:-1;;;;;23202:3826:11:o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;260:175:1:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:1;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:1;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:1;;;510:180::o;2971:276:15:-;3081:7;1887:8;;1872:11;:23;;1865:31;;;;3098:14;3115:35;3141:8;3115:25;:35::i;:::-;3098:52;;3156:20;3162:5;3169:6;3156:5;:20::i;:::-;3188:35;;;;;;;;;;;;;;-1:-1:-1;;;;;3188:35:15;;;;;;;;;;;3236:6;2971:276;-1:-1:-1;;;2971:276:15:o;3456:295::-;3565:7;1887:8;;1872:11;:23;;1865:31;;;;3582:21;3606:34;3632:7;3606:25;:34::i;:::-;3582:58;;3646:21;3652:5;3659:7;3646:5;:21::i;:::-;3679:41;;;;;;;;;;;;;;-1:-1:-1;;;;;3679:41:15;;;;;;;;;;;3733:13;3456:295;-1:-1:-1;;;3456:295:15:o;21251:521:11:-;21305:5;;21355:3;21350:8;;21346:399;;;21410:82;21422:1;21417:2;:6;21410:82;;;21450:1;21443:8;;;;21469;21410:82;;;21346:399;;;21581:3;21566:169;21586:5;;;;21566:169;;275:1;21631:8;;;;21624:16;;21620:101;;21664:8;;;;;;;;21694;;;;21620:101;21599:1;21593:7;;;21566:169;;;;21762:3;21251:521;-1:-1:-1;;21251:521:11:o;232:4455:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;232:4455:17;;;-1:-1:-1;232:4455:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_reimbursement",
          "type": "uint256"
        }
      ],
      "name": "CurvedBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_deposit",
          "type": "uint256"
        }
      ],
      "name": "CurvedMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromReserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_fromReserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_toReserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_toReserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateCrossReserveReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateCurvedBurnReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateCurvedMintReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_totalRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateFundCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_totalRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateLiquidateReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "dustCollector",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exitTribute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_gasPrice",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_reserveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialPoolBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_investmentPool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_reserveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialPoolBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_investmentPool",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "investmentPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "investmentPoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolSplit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "refund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reservePoolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setExitTribute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasPrice",
          "type": "uint256"
        }
      ],
      "name": "setGasPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPool",
          "type": "address"
        }
      ],
      "name": "setInvestmentPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_amount",
          "type": "uint8"
        }
      ],
      "name": "setPoolSplit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setReserveToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/ElectraSeedFundToken.sol",
    "exportedSymbols": {
      "ElectraSeedFundToken": [
        4671
      ]
    },
    "id": 4672,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4387,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "contracts/TokenPoolManager.sol",
        "file": "./TokenPoolManager.sol",
        "id": 4388,
        "nodeType": "ImportDirective",
        "scope": 4672,
        "sourceUnit": 4792,
        "src": "25:32:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4389,
              "name": "ERC20BondingToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4791,
              "src": "265:17:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20BondingToken_$4791",
                "typeString": "contract ERC20BondingToken"
              }
            },
            "id": 4390,
            "nodeType": "InheritanceSpecifier",
            "src": "265:17:17"
          }
        ],
        "contractDependencies": [
          29,
          233,
          956,
          997,
          1064,
          1113,
          1182,
          1251,
          3916,
          4089,
          4136,
          4341,
          4791
        ],
        "contractKind": "contract",
        "documentation": "@title ElectraSeed Fund Token\n@dev ESF Token is an ERC20 fungible token with a bonding curve price function that\nuses an ERC20 based stable coin as its reserve",
        "fullyImplemented": true,
        "id": 4671,
        "linearizedBaseContracts": [
          4671,
          4791,
          4341,
          3916,
          4136,
          4089,
          997,
          1113,
          233,
          956,
          1064,
          1182,
          29,
          1251
        ],
        "name": "ElectraSeedFundToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4392,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 4671,
            "src": "288:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4434,
              "nodeType": "Block",
              "src": "659:273:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4418,
                        "name": "_reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4394,
                        "src": "704:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$956",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4419,
                        "name": "_initialPoolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4396,
                        "src": "727:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4420,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4398,
                        "src": "756:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4421,
                        "name": "_reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4400,
                        "src": "780:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4422,
                        "name": "_gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4402,
                        "src": "803:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4423,
                        "name": "_investmentPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4404,
                        "src": "822:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$956",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4415,
                        "name": "ERC20BondingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4791,
                        "src": "666:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20BondingToken_$4791_$",
                          "typeString": "type(contract ERC20BondingToken)"
                        }
                      },
                      "id": 4417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4736,
                      "src": "666:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$956_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,uint256,uint256,uint32,uint256,address)"
                      }
                    },
                    "id": 4424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:172:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4425,
                  "nodeType": "ExpressionStatement",
                  "src": "666:172:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4429,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4406,
                        "src": "879:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4430,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4408,
                        "src": "894:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4431,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4410,
                        "src": "911:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4426,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "845:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1064_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 4428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1035,
                      "src": "845:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 4432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:81:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4433,
                  "nodeType": "ExpressionStatement",
                  "src": "845:81:17"
                }
              ]
            },
            "documentation": null,
            "id": 4435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4413,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4412,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1226,
                  "src": "645:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "645:11:17"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4394,
                  "name": "_reserveToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "377:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$956",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4393,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 956,
                    "src": "377:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$956",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4396,
                  "name": "_initialPoolBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "404:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4398,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "439:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4400,
                  "name": "_reserveRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "469:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4399,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4402,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "497:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4404,
                  "name": "_investmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "522:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4406,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "553:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4405,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4408,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "580:21:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4410,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "609:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4409,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:256:17"
            },
            "returnParameters": {
              "id": 4414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:17"
            },
            "scope": 4671,
            "src": "350:582:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4464,
              "nodeType": "Block",
              "src": "1134:270:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4441,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4437,
                          "src": "1148:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1158:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1148:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c65643a20416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 4444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1161:43:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        },
                        "value": "Failed: Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        }
                      ],
                      "id": 4440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "1140:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4446,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:65:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4450,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4806,
                              "src": "1254:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1254:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4453,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4856,
                                "src": "1282:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ElectraSeedFundToken_$4671",
                                  "typeString": "contract ElectraSeedFundToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ElectraSeedFundToken_$4671",
                                  "typeString": "contract ElectraSeedFundToken"
                                }
                              ],
                              "id": 4452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1274:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1274:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4455,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4437,
                            "src": "1297:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4448,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4681,
                            "src": "1219:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$956",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 681,
                          "src": "1219:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 4456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1219:86:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f72206d696e742e",
                        "id": 4457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:56:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e68781162ca8478d7768f1856d28dd881fd990ac7a3f87cb96d4691cdad25314",
                          "typeString": "literal_string \"ERC20BondingToken: Failed to transfer tokens for mint.\""
                        },
                        "value": "ERC20BondingToken: Failed to transfer tokens for mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e68781162ca8478d7768f1856d28dd881fd990ac7a3f87cb96d4691cdad25314",
                          "typeString": "literal_string \"ERC20BondingToken: Failed to transfer tokens for mint.\""
                        }
                      ],
                      "id": 4447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "1211:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:161:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4459,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:161:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4461,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4437,
                        "src": "1391:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4460,
                      "name": "_curvedMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4264,
                      "src": "1379:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 4462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4463,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:20:17"
                }
              ]
            },
            "documentation": "@dev Allows patrons to purchase ESF tokens by depositing an amount of reserve tokens\n@param _amount The amount of reserve tokens to deposit",
            "id": 4465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4437,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4465,
                  "src": "1108:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:17:17"
            },
            "returnParameters": {
              "id": 4439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:17"
            },
            "scope": 4671,
            "src": "1095:309:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4503,
              "nodeType": "Block",
              "src": "1596:367:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4471,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4467,
                          "src": "1610:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1620:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1610:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c65643a20416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 4474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1623:43:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        },
                        "value": "Failed: Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        }
                      ],
                      "id": 4470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "1602:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4476,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:65:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4479,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4806,
                                "src": "1691:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1691:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 4478,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "1681:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 4481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1681:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4482,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4467,
                          "src": "1706:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1681:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230426f6e64696e67546f6b656e3a20496e737566696369656e742066756e647320666f722073616c6520616d6f756e742e",
                        "id": 4484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1721:55:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_337a102a3c9591ab3d7b23843ba6548329fcc6f84ac7c164a6ef040741db157a",
                          "typeString": "literal_string \"ERC20BondingToken: Insuficient funds for sale amount.\""
                        },
                        "value": "ERC20BondingToken: Insuficient funds for sale amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_337a102a3c9591ab3d7b23843ba6548329fcc6f84ac7c164a6ef040741db157a",
                          "typeString": "literal_string \"ERC20BondingToken: Insuficient funds for sale amount.\""
                        }
                      ],
                      "id": 4477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "1673:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:104:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4486,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:104:17"
                },
                {
                  "assignments": [
                    4488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4488,
                      "name": "reimbursement",
                      "nodeType": "VariableDeclaration",
                      "scope": 4503,
                      "src": "1784:21:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1784:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4492,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4490,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4467,
                        "src": "1820:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4489,
                      "name": "_curvedBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4309,
                      "src": "1808:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 4491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1784:44:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4496,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4806,
                              "src": "1865:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1865:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4498,
                            "name": "reimbursement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4488,
                            "src": "1877:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4494,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4681,
                            "src": "1843:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$956",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 610,
                          "src": "1843:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 4499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1843:48:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f72206275726e2e",
                        "id": 4500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1901:56:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af67447f888060463e8cb7d1dff8fdc114abcf9e13e42977a095e08daa2fc13c",
                          "typeString": "literal_string \"ERC20BondingToken: Failed to transfer tokens for burn.\""
                        },
                        "value": "ERC20BondingToken: Failed to transfer tokens for burn."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af67447f888060463e8cb7d1dff8fdc114abcf9e13e42977a095e08daa2fc13c",
                          "typeString": "literal_string \"ERC20BondingToken: Failed to transfer tokens for burn.\""
                        }
                      ],
                      "id": 4493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "1835:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1835:123:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4502,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:123:17"
                }
              ]
            },
            "documentation": "@dev Allows token holders to sell their ESF holdings and collect a reimbursement\n@param _amount The amount of ESF tokens to burn",
            "id": 4504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4467,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4504,
                  "src": "1570:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1569:17:17"
            },
            "returnParameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:17"
            },
            "scope": 4671,
            "src": "1556:407:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4530,
              "nodeType": "Block",
              "src": "2193:206:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4510,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4506,
                          "src": "2207:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2217:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2207:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c65643a20416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 4513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2220:43:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        },
                        "value": "Failed: Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        }
                      ],
                      "id": 4509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "2199:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4515,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:65:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4518,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4806,
                                "src": "2288:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2288:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 4517,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "2278:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 4520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2278:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4521,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4506,
                          "src": "2303:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2278:32:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c65643a20496e737566696369656e742066756e647320666f7220646f6e6174696f6e20616d6f756e742e",
                        "id": 4523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2318:48:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c9edf55e4345f1292a5d4d79f49be632d699be509b8d8de3be08562ef1fa89e",
                          "typeString": "literal_string \"Failed: Insuficient funds for donation amount.\""
                        },
                        "value": "Failed: Insuficient funds for donation amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c9edf55e4345f1292a5d4d79f49be632d699be509b8d8de3be08562ef1fa89e",
                          "typeString": "literal_string \"Failed: Insuficient funds for donation amount.\""
                        }
                      ],
                      "id": 4516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "2270:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:97:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4525,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:97:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4527,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4506,
                        "src": "2386:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4526,
                      "name": "_curvedBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4309,
                      "src": "2374:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 4528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2374:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4529,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:20:17"
                }
              ]
            },
            "documentation": "@dev Allows tokens holders to donate their own holdings without collecting\na reimbursement, ie sponsored burning\n@param _amount The amount of ESF tokens to burn",
            "id": 4531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4506,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4531,
                  "src": "2167:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2166:17:17"
            },
            "returnParameters": {
              "id": 4508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:0:17"
            },
            "scope": 4671,
            "src": "2151:248:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4556,
              "nodeType": "Block",
              "src": "2734:245:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4537,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "2748:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2758:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2748:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c65643a20416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 4540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:43:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        },
                        "value": "Failed: Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18f18e9ce3393be88c4bce03997fcb73c3b0ce51ead13a289cb6678dfd920ab",
                          "typeString": "literal_string \"Failed: Amount must be greater than zero.\""
                        }
                      ],
                      "id": 4536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "2740:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2740:65:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4542,
                  "nodeType": "ExpressionStatement",
                  "src": "2740:65:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4546,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4806,
                              "src": "2854:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2854:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4549,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4856,
                                "src": "2882:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ElectraSeedFundToken_$4671",
                                  "typeString": "contract ElectraSeedFundToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ElectraSeedFundToken_$4671",
                                  "typeString": "contract ElectraSeedFundToken"
                                }
                              ],
                              "id": 4548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2874:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2874:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4551,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4533,
                            "src": "2897:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4544,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4681,
                            "src": "2819:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$956",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 681,
                          "src": "2819:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 4552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2819:86:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f7220726566756e642e",
                        "id": 4553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2915:58:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ee5c402d249a158ecd62d8f78cdfec0fc2fca7e7c3f3c7c4cf88e857564669f",
                          "typeString": "literal_string \"ERC20BondingToken: Failed to transfer tokens for refund.\""
                        },
                        "value": "ERC20BondingToken: Failed to transfer tokens for refund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ee5c402d249a158ecd62d8f78cdfec0fc2fca7e7c3f3c7c4cf88e857564669f",
                          "typeString": "literal_string \"ERC20BondingToken: Failed to transfer tokens for refund.\""
                        }
                      ],
                      "id": 4543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "2811:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:163:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4555,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:163:17"
                }
              ]
            },
            "documentation": "@dev Allows depositing reserve tokens directly in the reserve pool without minting new tokens.\nA use case would be the recurring payments energy asset operators will make to ElectraSeed Fund\n@param _amount The amount of reserve tokens to deposit in the reserve pool",
            "id": 4557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4533,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4557,
                  "src": "2708:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2708:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2707:17:17"
            },
            "returnParameters": {
              "id": 4535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2734:0:17"
            },
            "scope": 4671,
            "src": "2692:287:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4574,
              "nodeType": "Block",
              "src": "3187:95:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "3201:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3201:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4565,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "3215:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3201:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320697320616e2061646d696e2066756e6374696f6e",
                        "id": 4567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3222:27:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        },
                        "value": "This is an admin function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        }
                      ],
                      "id": 4562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "3193:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4569,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:57:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4570,
                      "name": "gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4158,
                      "src": "3257:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4571,
                      "name": "_gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4559,
                      "src": "3268:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3257:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4573,
                  "nodeType": "ExpressionStatement",
                  "src": "3257:20:17"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the gas price limit\n@param _gasPrice The new gas price",
            "id": 4575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGasPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4559,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 4575,
                  "src": "3159:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:19:17"
            },
            "returnParameters": {
              "id": 4561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3187:0:17"
            },
            "scope": 4671,
            "src": "3138:144:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4592,
              "nodeType": "Block",
              "src": "3458:96:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4581,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "3472:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3472:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4583,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "3486:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3472:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320697320616e2061646d696e2066756e6374696f6e",
                        "id": 4585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3493:27:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        },
                        "value": "This is an admin function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        }
                      ],
                      "id": 4580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "3464:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4587,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:57:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4588,
                      "name": "exitTribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4686,
                      "src": "3528:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4589,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4577,
                      "src": "3542:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3528:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4591,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:21:17"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the exit tribute\n@param _amount The new value for exit tax calculation",
            "id": 4593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setExitTribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4577,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4593,
                  "src": "3432:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3431:17:17"
            },
            "returnParameters": {
              "id": 4579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3458:0:17"
            },
            "scope": 4671,
            "src": "3408:146:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4610,
              "nodeType": "Block",
              "src": "3758:94:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4599,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "3772:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3772:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4601,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "3786:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3772:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320697320616e2061646d696e2066756e6374696f6e",
                        "id": 4603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:27:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        },
                        "value": "This is an admin function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        }
                      ],
                      "id": 4598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "3764:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3764:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4605,
                  "nodeType": "ExpressionStatement",
                  "src": "3764:57:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4606,
                      "name": "poolSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4689,
                      "src": "3828:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4607,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4595,
                      "src": "3840:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3828:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4609,
                  "nodeType": "ExpressionStatement",
                  "src": "3828:19:17"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the reserve / investment token pool split amount\n@param _amount The new value for exit tax calculation",
            "id": 4611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPoolSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4595,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4611,
                  "src": "3734:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4594,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3733:15:17"
            },
            "returnParameters": {
              "id": 4597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3758:0:17"
            },
            "scope": 4671,
            "src": "3712:140:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4628,
              "nodeType": "Block",
              "src": "4026:96:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4617,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "4040:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4040:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4619,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "4054:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4040:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320697320616e2061646d696e2066756e6374696f6e",
                        "id": 4621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4061:27:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        },
                        "value": "This is an admin function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        }
                      ],
                      "id": 4616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "4032:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4032:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4623,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:57:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4624,
                      "name": "reserveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4681,
                      "src": "4096:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$956",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4625,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4613,
                      "src": "4111:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$956",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "4096:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$956",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 4627,
                  "nodeType": "ExpressionStatement",
                  "src": "4096:21:17"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the reserve token\n@param _token The new reserve token contract address",
            "id": 4629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReserveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4613,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4629,
                  "src": "4003:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$956",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4612,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 956,
                    "src": "4003:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$956",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4002:14:17"
            },
            "returnParameters": {
              "id": 4615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4026:0:17"
            },
            "scope": 4671,
            "src": "3978:144:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4646,
              "nodeType": "Block",
              "src": "4350:100:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4635,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "4364:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4364:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4637,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "4378:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4364:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320697320616e2061646d696e2066756e6374696f6e",
                        "id": 4639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4385:27:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        },
                        "value": "This is an admin function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        }
                      ],
                      "id": 4634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "4356:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4641,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:57:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4642,
                      "name": "investmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4683,
                      "src": "4420:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4643,
                      "name": "_newPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4631,
                      "src": "4437:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4420:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4645,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:25:17"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the TCR contract address that serves\nas the investment pool wallet\n@param _newPool The new investment pool address",
            "id": 4647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInvestmentPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4631,
                  "name": "_newPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 4647,
                  "src": "4323:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4323:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4322:18:17"
            },
            "returnParameters": {
              "id": 4633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4350:0:17"
            },
            "scope": 4671,
            "src": "4296:154:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4669,
              "nodeType": "Block",
              "src": "4566:117:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4651,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "4580:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4580:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4653,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "4594:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4580:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320697320616e2061646d696e2066756e6374696f6e",
                        "id": 4655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4601:27:17",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        },
                        "value": "This is an admin function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c24d7f2f07236af010761f7f547d15e9c093c615b88dcafc31294e962810ed",
                          "typeString": "literal_string \"This is an admin function\""
                        }
                      ],
                      "id": 4650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4809,
                        4810
                      ],
                      "referencedDeclaration": 4810,
                      "src": "4572:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4572:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4657,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:57:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4664,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4856,
                              "src": "4664:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ElectraSeedFundToken_$4671",
                                "typeString": "contract ElectraSeedFundToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ElectraSeedFundToken_$4671",
                                "typeString": "contract ElectraSeedFundToken"
                              }
                            ],
                            "id": 4663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4656:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4656:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4656:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4658,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4806,
                          "src": "4636:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4636:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4636:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4668,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:42:17"
                }
              ]
            },
            "documentation": "@dev Allows the owner to collect any wei sent to this contract",
            "id": 4670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dustCollector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4554:2:17"
            },
            "returnParameters": {
              "id": 4649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4566:0:17"
            },
            "scope": 4671,
            "src": "4532:151:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4672,
        "src": "232:4455:17"
      }
    ],
    "src": "0:4687:17"
  },
  "bytecode": "0x6080604052610134805461ffff1916600617905560006101b681905560016101b9556101ba805460ff191660031790556001641c35fedd1560601b03610155556001646c3390ecc9605e1b03610156556001640cf801476160611b036101575560016431bdb23e1d605f1b036101585560016502fb1d8fe083605b1b036101595560016505b771955b37605a1b0361015a556001650af67a93bb5160591b0361015b5560016515060c256cb360581b0361015c556001651428a2f98d7360581b0361015d556001654d515663970960561b0361015e55600165944620b0e70f60551b0361015f55600166011c592761c66760541b036101605560016602214d10d014eb60531b0361016155600166020ade36b7dbef60531b036101625560016603eab73b3bbfe360521b03610163556001660782ee3593f6d760511b03610164556001661ccf4b44bb4821604f1b036101655560016606e7f88ad8a77760511b036101665560016669f3d1c921891d604d1b0361016755600166cb2ff529eb71e5604c1b0361016855600166c2d415c3db974b604c1b036101695560016702eb40f9f620fda7604a1b0361016a5560016705990681d961a1eb60491b0361016b55600167055e12902701414760491b0361016c5560016714962dee9dc9764160471b0361016d5560016704ef57b9b560fab560491b0361016e5560016712ed7b32a58f552b60471b0361016f556001679131271922eaa60760441b03610170556001678b380f3558668c4760441b03610171556001680215f77c045fbe885760421b03610172556001600160831b03610173556001670f577eded5773a1160471b03610174556001680eb5ec597592befbf5603f1b03610175556001681c35fedd14b861eb05603e1b03610176556001683619c87664579bc94b603d1b036101775560016867c00a3b07ffc01fd7603c1b0361017855600168c6f6c8f8739773a7a5603b1b0361017955600168bec763f8209b7a72b1603b1b0361017a5560016902dbb8caad9b7097b91b60391b0361017b55600169057b3d49dda84556d6f760381b0361017c55600169054183095b2c8ececf3160381b0361017d556001690a14517cc6b9457111ef60371b0361017e5560016913545598e5c23276ccf160361b0361017f556001692511882c39c3adea96ff60351b0361018055600169471649d87199aa99075760341b03610181557004429a21a029d4c1457cfbffffffffffff61018255700415bc6d6fb7dd71af2cb3ffffffffffff610183557003eab73b3bbfe282243ce1ffffffffffff610184557003c1771ac9fb6b4c18e229ffffffffffff61018555700399e96897690418f785257fffffffffff61018655700373fc456c53bb779bf0ea9fffffffffff6101875570034f9e8e490c48e67e6ab8bfffffffffff6101885570032cbfd4a7adc790560b3337ffffffffff6101895570030b50570f6e5d2acca94613ffffffffff61018a557002eb40f9f620fda6b56c2861ffffffffff61018b557002cc8340ecb0d0f520a6af58ffffffffff61018c557002af09481380a0a35cf1ba02ffffffffff61018d55700292c5bdd3b92ec810287b1b3fffffffff61018e55700277abdcdab07d5a77ac6d6b9fffffffff61018f5570025daf6654b1eaa55fd64df5efffffffff61019055700244c49c648baa98192dce88b7ffffffff6101915570022ce03cd5619a311b2471268bffffffff61019255700215f77c045fbe885654a44a0fffffffff610193556001600160811b03610194557001eaefdbdaaee7421fc4d3ede5ffffffff610195557001d6bd8b2eb257df7e8ca57b09bfffffff610196557001c35fedd14b861eb0443f7f133fffffff610197557001b0ce43b322bcde4a56e8ada5afffffff6101985570019f0028ec1fff007f5a195a39dfffffff6101995570018ded91f0e72ee74f49b15ba527ffffff61019a5570017d8ec7f04136f4e5615fd41a63ffffff61019b5570016ddc6556cdb84bdc8d12d22e6fffffff61019c5570015ecf52776a1155b5bd8395814f7fffff61019d5570015060c256cb23b3b3cc3754cf40ffffff61019e557001428a2f98d728ae223ddab715be3fffff61019f5570013545598e5c23276ccf0ede68034fffff6101a0557001288c4161ce1d6f54b7f61081194fffff6101a15570011c592761c666aa641d5a01a40f17ffff6101a255700110a688680a7530515f3e6e6cfdcdffff6101a3557001056f1b5bedf75c6bcb2ce8aed428ffff6101a4556ffaadceceeff8a0890f3875f008277fff6101a5556ff05dc6b27edad306388a600f6ba0bfff6101a6556fe67a5a25da41063de1495d5b18cdbfff6101a7556fdcff115b14eedde6fc3aa5353f2e4fff6101a8556fd3e7a3924312399f9aae2e0f868f8fff6101a9556fcb2ff529eb71e41582cccd5a1ee26fff6101aa556fc2d415c3db974ab32a51840c0b67edff6101ab556fbad03e7d883f69ad5b0a186184e06bff6101ac556fb320d03b2c343d4829abd6075f0cc5ff6101ad556fabc25204e02828d73c6e80bcdb1a95bf6101ae556fa4b16f74ee4bb2040a1ec6c15fbbf2df6101af556f9deaf736ac1f569deb1b5ae3f36c130f6101b0556f976bd9952c7aa957f5937d790ef650376101b1556f9131271922eaa6064b73a22d0bd4f2bf6101b2556f8b380f3558668c46c91c49a2f8e967b96101b3556f857ddf0117efa215952912839f6473e66101b455613bd49081906107c890396000f3fe608060405234801561001057600080fd5b50600436106102bb5760003560e01c80638da5cb5b11610182578063bb4bcffc116100e9578063d96a094a116100a2578063f14faf6f1161007c578063f14faf6f14610b8a578063f4325d6714610ba7578063f5cd1e5b14610baf578063fe173b9714610bcc576102bb565b8063d96a094a14610b22578063dd62ed3e14610b3f578063e4849b3214610b6d576102bb565b8063bb4bcffc14610943578063bf1fe42014610969578063bf73815314610986578063c4d66de81461098e578063c58d1ba9146109b4578063d26bd3e0146109bc576102bb565b80639e40524c1161013b5780639e40524c14610880578063a457c2d714610888578063a9059cbb146108b4578063aa271e1a146108e0578063abfd231d14610906578063ac3b8c5b1461093b576102bb565b80638da5cb5b1461080557806391e32f5e1461080d57806395d89b411461082d578063983b2d5614610835578063986502751461085b5780639a4f318b14610863576102bb565b806340c10f191161022657806370a08231116101df57806370a08231146106fc57806379c1b4501461072257806379cc67901461075f57806384f2b3841461078b5780638cdecb04146107b15780638d265d13146107b9576102bb565b806340c10f191461061e57806342966c681461064a578063498e84f41461066757806349f9b0f71461068b57806354fd4d50146106c05780636d6f1e01146106df576102bb565b80631da6bbfb116102785780631da6bbfb1461051757806323b872dd1461054c578063278ecde11461058257806329a00e7c1461059f578063313ce567146105d457806339509351146105f2576102bb565b806306fdde03146102c0578063095ea7b31461033d5780630c7d5cd81461037d5780631624f6c61461039e57806318160ddd146104ce5780631cafa218146104e8575b600080fd5b6102c8610bd4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103025781810151838201526020016102ea565b50505050905090810190601f16801561032f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561035357600080fd5b506001600160a01b038135169060200135610c6b565b604080519115158252519081900360200190f35b610385610c89565b6040805163ffffffff9092168252519081900360200190f35b6104cc600480360360608110156103b457600080fd5b810190602081018135600160201b8111156103ce57600080fd5b8201836020820111156103e057600080fd5b803590602001918460018302840111600160201b8311171561040157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561045357600080fd5b82018360208201111561046557600080fd5b803590602001918460018302840111600160201b8311171561048657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff169150610c969050565b005b6104d6610d72565b60408051918252519081900360200190f35b6104cc600480360360608110156104fe57600080fd5b5080359063ffffffff6020820135169060400135610d78565b6104d66004803603608081101561052d57600080fd5b5080359060208101359063ffffffff6040820135169060600135610e42565b6103696004803603606081101561056257600080fd5b506001600160a01b03813581169160208101359091169060400135610f21565b6104cc6004803603602081101561059857600080fd5b5035610fae565b6104d6600480360360808110156105b557600080fd5b5080359060208101359063ffffffff60408201351690606001356110b2565b6105dc611183565b6040805160ff9092168252519081900360200190f35b6103696004803603604081101561060857600080fd5b506001600160a01b03813516906020013561118c565b6103696004803603604081101561063457600080fd5b506001600160a01b0381351690602001356111e0565b6104cc6004803603602081101561066057600080fd5b5035611237565b61066f611248565b604080516001600160a01b039092168252519081900360200190f35b6104d6600480360360808110156106a157600080fd5b5080359060208101359063ffffffff6040820135169060600135611258565b6106c8611332565b6040805161ffff9092168252519081900360200190f35b6104d6600480360360208110156106f557600080fd5b503561133d565b6104d66004803603602081101561071257600080fd5b50356001600160a01b031661136a565b6104d6600480360360a081101561073857600080fd5b5080359063ffffffff60208201358116916040810135916060820135169060800135611385565b6104cc6004803603604081101561077557600080fd5b506001600160a01b03813516906020013561148f565b6104cc600480360360208110156107a157600080fd5b50356001600160a01b031661149d565b6104d6611513565b6104cc600480360360c08110156107cf57600080fd5b506001600160a01b03813581169160208101359160408201359163ffffffff6060820135169160808201359160a001351661151a565b61066f6116b6565b6104cc6004803603602081101561082357600080fd5b503560ff166116cb565b6102c8611735565b6104cc6004803603602081101561084b57600080fd5b50356001600160a01b0316611796565b6104cc6117e5565b6104d66004803603602081101561087957600080fd5b50356117f7565b6105dc61181c565b6103696004803603604081101561089e57600080fd5b506001600160a01b038135169060200135611826565b610369600480360360408110156108ca57600080fd5b506001600160a01b038135169060200135611894565b610369600480360360208110156108f657600080fd5b50356001600160a01b03166118a8565b6104d66004803603608081101561091c57600080fd5b5080359060208101359063ffffffff60408201351690606001356118bb565b6104d6611946565b6104cc6004803603602081101561095957600080fd5b50356001600160a01b03166119cd565b6104cc6004803603602081101561097f57600080fd5b5035611a43565b6104cc611a9c565b6104cc600480360360208110156109a457600080fd5b50356001600160a01b0316611b1c565b6104d6611bc7565b6104cc60048036036101208110156109d357600080fd5b6001600160a01b03823581169260208101359260408201359263ffffffff6060840135169260808101359260a08201359092169181019060e0810160c0820135600160201b811115610a2457600080fd5b820183602082011115610a3657600080fd5b803590602001918460018302840111600160201b83111715610a5757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610aa957600080fd5b820183602082011115610abb57600080fd5b803590602001918460018302840111600160201b83111715610adc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff169150611c139050565b6104cc60048036036020811015610b3857600080fd5b5035611cd7565b6104d660048036036040811015610b5557600080fd5b506001600160a01b0381358116916020013516611de1565b6104cc60048036036020811015610b8357600080fd5b5035611e0c565b6104cc60048036036020811015610ba057600080fd5b5035611f5c565b61066f611feb565b6104cc60048036036020811015610bc557600080fd5b5035611ffb565b6104d6612054565b60338054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b505050505090505b90565b6000610c7f610c7861205b565b848461205f565b5060015b92915050565b6101b55463ffffffff1681565b600054610100900460ff1680610caf5750610caf61214b565b80610cbd575060005460ff16155b610cf85760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015610d23576000805460ff1961ff0019909116610100171660011790555b8351610d36906033906020870190613771565b508251610d4a906034906020860190613771565b506035805460ff191660ff84161790558015610d6c576000805461ff00191690555b50505050565b606a5490565b600054610100900460ff1680610d915750610d9161214b565b80610d9f575060005460ff16155b610dda5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015610e05576000805460ff1961ff0019909116610100171660011790555b6101b5805463ffffffff191663ffffffff85161790556101b6829055610e2b3385612151565b8015610d6c576000805461ff001916905550505050565b60008085118015610e535750600084115b8015610e65575060018363ffffffff16115b8015610e7a5750621e848063ffffffff841611155b610e8357600080fd5b81610e9057506000610f19565b63ffffffff8316620f42401415610ec757846001610eb4848763ffffffff61224316565b0381610ebc57fe5b046001019050610f19565b60008080610edb888663ffffffff61227116565b9050610eec8189620f424089612283565b9093509150600060ff83166001610f098a8763ffffffff61224316565b03901c8890036001019450505050505b949350505050565b6000610f2e848484612355565b610fa484610f3a61205b565b610f9f856040518060600160405280602881526020016139a3602891396001600160a01b038a16600090815260696020526040812090610f7861205b565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6124b316565b61205f565b5060019392505050565b60008111610fed5760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b6101b754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561104857600080fd5b505af115801561105c573d6000803e3d6000fd5b505050506040513d602081101561107257600080fd5b50516110af5760405162461bcd60e51b815260040180806020018281038252603881526020018061389f6038913960400191505060405180910390fd5b50565b600080851180156110c35750600084115b80156110d5575060008363ffffffff16115b80156110ea5750620f424063ffffffff841611155b6110f357600080fd5b8161110057506000610f19565b63ffffffff8316620f424014156111315783611122868463ffffffff61224316565b8161112957fe5b049050610f19565b60008080611145858863ffffffff61227116565b9050611156818888620f4240612283565b9093509150600060ff83166111718a8663ffffffff61224316565b901c9890980398975050505050505050565b60355460ff1690565b6000610c7f61119961205b565b84610f9f85606960006111aa61205b565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61254a16565b60006111f26111ed61205b565b6118a8565b61122d5760405162461bcd60e51b81526004018080602001828103825260308152602001806139326030913960400191505060405180910390fd5b610c7f8383612151565b6110af61124261205b565b826125a4565b6101b8546001600160a01b031681565b600080851180156112695750600084115b801561127b575060008363ffffffff16115b80156112905750620f424063ffffffff841611155b801561129c5750848211155b6112a557600080fd5b816112b257506000610f19565b848214156112c1575082610f19565b63ffffffff8316620f424014156112e35784611122858463ffffffff61224316565b6000808387036112f88882620f424089612283565b9093509150600061130f888563ffffffff61224316565b905060ff831688901b848183038161132357fe5b049a9950505050505050505050565b6101345461ffff1681565b600061136261134a610d72565b611352611bc7565b6101b55463ffffffff1685611258565b90505b919050565b6001600160a01b031660009081526068602052604090205490565b6000808611801561139c575060008563ffffffff16115b80156113b15750620f424063ffffffff861611155b80156113bd5750600084115b80156113cf575060008363ffffffff16115b80156113e45750620f424063ffffffff841611155b6113ed57600080fd5b8263ffffffff168563ffffffff16141561143057611411868363ffffffff61227116565b611421858463ffffffff61224316565b8161142857fe5b049050611486565b60008080611444898663ffffffff61227116565b9050611452818a8a89612283565b90935091506000611469888563ffffffff61224316565b905060ff831688901b848183038161147d57fe5b04955050505050505b95945050505050565b61149982826126a0565b5050565b6101ba5461010090046001600160a01b031633146114f0576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b780546001600160a01b0319166001600160a01b0392909216919091179055565b6101b95481565b600054610100900460ff1680611533575061153361214b565b80611541575060005460ff16155b61157c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff161580156115a7576000805460ff1961ff0019909116610100171660011790555b6101b780546001600160a01b03808a166001600160a01b031992831617928390556101b88054868316931692909217909155604080516323b872dd60e01b8152336004820152306024820152604481018a9052905192909116916323b872dd916064808201926020929091908290030181600087803b15801561162957600080fd5b505af115801561163d573d6000803e3d6000fd5b505050506040513d602081101561165357600080fd5b50516116905760405162461bcd60e51b815260040180806020018281038252603d815260200180613b3e603d913960400191505060405180910390fd5b61169b858585610d78565b80156116ad576000805461ff00191690555b50505050505050565b6101ba5461010090046001600160a01b031681565b6101ba5461010090046001600160a01b0316331461171e576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101ba805460ff191660ff92909216919091179055565b60348054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c605780601f10610c3557610100808354040283529160200191610c60565b6117a16111ed61205b565b6117dc5760405162461bcd60e51b81526004018080602001828103825260308152602001806139326030913960400191505060405180910390fd5b6110af816126f4565b6117f56117f061205b565b61273c565b565b6000611362611804610d72565b61180c611bc7565b6101b55463ffffffff16856110b2565b6101ba5460ff1681565b6000610c7f61183361205b565b84610f9f85604051806060016040528060258152602001613b7b602591396069600061185d61205b565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6124b316565b6000610c7f6118a161205b565b8484612355565b6000611362609d8363ffffffff61278416565b600080851180156118cc5750600084115b80156118de575060018363ffffffff16115b80156118f35750621e848063ffffffff841611155b80156118ff5750848211155b61190857600080fd5b8161191557506000610f19565b84821415611924575082610f19565b63ffffffff8316620f424014156112e35784611122838663ffffffff61224316565b6101b7546101b854604080516370a0823160e01b81526001600160a01b039283166004820152905160009392909216916370a0823191602480820192602092909190829003018186803b15801561199c57600080fd5b505afa1580156119b0573d6000803e3d6000fd5b505050506040513d60208110156119c657600080fd5b5051905090565b6101ba5461010090046001600160a01b03163314611a20576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b880546001600160a01b0319166001600160a01b0392909216919091179055565b6101ba5461010090046001600160a01b03163314611a96576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b655565b6101ba5461010090046001600160a01b03163314611aef576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6040513390303180156108fc02916000818181858888f193505050501580156110af573d6000803e3d6000fd5b600054610100900460ff1680611b355750611b3561214b565b80611b43575060005460ff16155b611b7e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015611ba9576000805460ff1961ff0019909116610100171660011790555b611bb2826127eb565b8015611499576000805461ff00191690555050565b6101b754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561199c57600080fd5b600054610100900460ff1680611c2c5750611c2c61214b565b80611c3a575060005460ff16155b611c755760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015611ca0576000805460ff1961ff0019909116610100171660011790555b611cae8a8a8a8a8a8a61151a565b611cb9848484610c96565b8015611ccb576000805461ff00191690555b50505050505050505050565b60008111611d165760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b6101b754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015611d7157600080fd5b505af1158015611d85573d6000803e3d6000fd5b505050506040513d6020811015611d9b57600080fd5b5051611dd85760405162461bcd60e51b8152600401808060200182810382526036815260200180613b086036913960400191505060405180910390fd5b6114998161288e565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205490565b60008111611e4b5760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b80611e553361136a565b1015611e925760405162461bcd60e51b81526004018080602001828103825260358152602001806138d76035913960400191505060405180910390fd5b6000611e9d8261289a565b6101b7546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b158015611ef557600080fd5b505af1158015611f09573d6000803e3d6000fd5b505050506040513d6020811015611f1f57600080fd5b50516114995760405162461bcd60e51b8152600401808060200182810382526036815260200180613a686036913960400191505060405180910390fd5b60008111611f9b5760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b80611fa53361136a565b1015611fe25760405162461bcd60e51b815260040180806020018281038252602e81526020018061382d602e913960400191505060405180910390fd5b6114998161289a565b6101b7546001600160a01b031681565b6101ba5461010090046001600160a01b0316331461204e576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b955565b6101b65481565b3390565b6001600160a01b0383166120a45760405162461bcd60e51b8152600401808060200182810382526024815260200180613ae46024913960400191505060405180910390fd5b6001600160a01b0382166120e95760405162461bcd60e51b815260040180806020018281038252602281526020018061387d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260696020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b0382166121ac576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b606a546121bf908263ffffffff61254a16565b606a556001600160a01b0382166000908152606860205260409020546121eb908263ffffffff61254a16565b6001600160a01b03831660008181526068602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008261225257506000610c83565b8282028284828161225f57fe5b041461226a57600080fd5b9392505050565b60008282018381101561226a57600080fd5b600080600160811b861061229657600080fd5b600080866001607f1b8902816122a857fe5b04905070015bf0a8b1457695355fb8ac404e7a79e38110156122d4576122cd816128a6565b91506122e0565b6122dd81612c88565b91505b60008563ffffffff168763ffffffff168402816122f957fe5b049050600160831b81101561231f5761231181612d32565b607f9450945050505061234c565b600061232a826130d6565b905061233f81607f0360ff1683901c82613169565b9550935061234c92505050565b94509492505050565b6001600160a01b03831661239a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613abf6025913960400191505060405180910390fd5b6001600160a01b0382166123df5760405162461bcd60e51b815260040180806020018281038252602381526020018061380a6023913960400191505060405180910390fd5b6124228160405180606001604052806026815260200161390c602691396001600160a01b038616600090815260686020526040902054919063ffffffff6124b316565b6001600160a01b038085166000908152606860205260408082209390935590841681522054612457908263ffffffff61254a16565b6001600160a01b0380841660008181526068602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156125425760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125075781810151838201526020016124ef565b50505050905090810190601f1680156125345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561226a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166125e95760405162461bcd60e51b8152600401808060200182810382526021815260200180613a9e6021913960400191505060405180910390fd5b61262c8160405180606001604052806022815260200161385b602291396001600160a01b038516600090815260686020526040902054919063ffffffff6124b316565b6001600160a01b038316600090815260686020526040902055606a54612658908263ffffffff61350616565b606a556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6126aa82826125a4565b611499826126b661205b565b610f9f84604051806060016040528060248152602001613a44602491396001600160a01b038816600090815260696020526040812090610f7861205b565b612705609d8263ffffffff61354816565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61274d609d8263ffffffff6135c916565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166127cb5760405162461bcd60e51b81526004018080602001828103825260228152602001806139cb6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff1680612804575061280461214b565b80612812575060005460ff16155b61284d5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015612878576000805460ff1961ff0019909116610100171660011790555b612881826118a8565b611bb257611bb2826126f4565b60006113623383613630565b600061136233836136a0565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd886106128ef576001607e1b840193506fd3094c70f034de4b96ff7d5b6f99fcd86001607f1b8702816128eb57fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a78610612932576001607d1b840193506fa45af1e1f40c333b3de1db4dd55f29a76001607f1b87028161292e57fe5b0495505b6f910b022db7ae67ce76b441c27035c6a18610612975576001607c1b840193506f910b022db7ae67ce76b441c27035c6a16001607f1b87028161297157fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886106129b8576001607b1b840193506f88415abbe9a76bead8d00cf112e4d4a86001607f1b8702816129b457fe5b0495505b6f84102b00893f64c705e841d5d4064bd386106129fb576001607a1b840193506f84102b00893f64c705e841d5d4064bd36001607f1b8702816129f757fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a28610612a3e57600160791b840193506f8204055aaef1c8bd5c3259f4822735a26001607f1b870281612a3a57fe5b0495505b6f810100ab00222d861931c15e39b44e998610612a8157600160781b840193506f810100ab00222d861931c15e39b44e996001607f1b870281612a7d57fe5b0495505b6f808040155aabbbe9451521693554f7338610612ac457600160771b840193506f808040155aabbbe9451521693554f7336001607f1b870281612ac057fe5b0495505b6f7fffffffffffffffffffffffffffffff19860192508291506001607f1b828002049050600160801b838103830204840193506001607f1b81830281612b0657fe5b049150600160811b836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281612b2a57fe5b04840193506001607f1b81830281612b3e57fe5b049150600360801b836f9999999999999999999999999999999903830281612b6257fe5b04840193506001607f1b81830281612b7657fe5b049150600160821b836f9249249249249249249249249249249203830281612b9a57fe5b04840193506001607f1b81830281612bae57fe5b049150600560801b836f8e38e38e38e38e38e38e38e38e38e38e03830281612bd257fe5b04840193506001607f1b81830281612be657fe5b049150600360811b836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281612c0a57fe5b04840193506001607f1b81830281612c1e57fe5b049150600760801b836f89d89d89d89d89d89d89d89d89d89d8903830281612c4257fe5b04840193506001607f1b81830281612c5657fe5b049150600160831b836f8888888888888888888888888888888803830281612c7a57fe5b049390930195945050505050565b600080600160801b8310612cb8576000612ca76001607f1b8504613710565b60ff1693841c936001607f1b029150505b6001607f1b831115612d0657607f5b60ff811615612d04576001607f1b848002049350600160801b8410612cfb57600193841c9360ff6000198301161b91909101905b60001901612cc7565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f88202049392505050565b6000670168244fdac780006001607f1b6f0fffffffffffffffffffffffffffffff84168080028290048082028390048083028490049485026710e1b3be415a00009092026705a0913f6b1e000091909102010192909181830204905080664807432bc1800002830192506001607f1b82820281612dab57fe5b04905080660c0135dca0400002830192506001607f1b82820281612dcb57fe5b049050806601b707b1cdc00002830192506001607f1b82820281612deb57fe5b049050806536e0f639b80002830192506001607f1b82820281612e0a57fe5b04905080650618fee9f80002830192506001607f1b82820281612e2957fe5b04905080649c197dcc0002830192506001607f1b82820281612e4757fe5b04905080640e30dce40002830192506001607f1b82820281612e6557fe5b0490508064012ebd130002830192506001607f1b82820281612e8357fe5b049050806317499f0002830192506001607f1b82820281612ea057fe5b049050806301a9d48002830192506001607f1b82820281612ebd57fe5b04905080621c638002830192506001607f1b82820281612ed957fe5b049050806201c63802830192506001607f1b82820281612ef557fe5b04905080611ab802830192506001607f1b82820281612f1057fe5b0490508061017c02830192506001607f1b82820281612f2b57fe5b04905080601402830192506001607f1b82820281612f4557fe5b6721c3677c82b400009190049384010482016001607f1b019290506001607c1b851615612f965770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f984020492505b6001607d1b851615612fcc577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884020492505b6001607e1b851615613001576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed584020492505b6001607f1b851615613035576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e84020492505b600160801b851615613069576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c584020492505b600160811b85161561309c576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d784020492505b600160821b8516156130cd576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30784020492505b50909392505050565b60006020607f5b8060ff168260010160ff161015613126576000600260ff84840116049050846101358260ff166080811061310d57fe5b01541061311c57809250613120565b8091505b506130dd565b836101358260ff166080811061313857fe5b0154106131485791506113659050565b836101358360ff166080811061315a57fe5b0154106102bb57509050611365565b60008083905060008090508360ff16858302901c9150816f03442c4e6074a82f1797f72ac000000002810190508360ff16858302901c9150816f0116b96f757c380fb287fd0e4000000002810190508360ff16858302901c9150816e45ae5bdd5f0e03eca1ff439000000002810190508360ff16858302901c9150816e0defabf91302cd95b9ffda5000000002810190508360ff16858302901c9150816e02529ca9832b22439efff9b800000002810190508360ff16858302901c9150816d54f1cf12bd04e516b6da8800000002810190508360ff16858302901c9150816d0a9e39e257a09ca2d6db5100000002810190508360ff16858302901c9150816d012e066e7b839fa050c30900000002810190508360ff16858302901c9150816c1e33d7d926c329a1ad1a80000002810190508360ff16858302901c9150816c02bee513bdb4a6b19b5f80000002810190508360ff16858302901c9150816b3a9316fa79b88eccf2a0000002810190508360ff16858302901c9150816b048177ebe1fa81237520000002810190508360ff16858302901c9150816a5263fe90242dcbacf0000002810190508360ff16858302901c9150816a057e22099c030d9410000002810190508360ff16858302901c9150816957e22099c030d941000002810190508360ff16858302901c91508169052b6b5456997631000002810190508360ff16858302901c915081684985f67696bf74800002810190508360ff16858302901c9150816803dea12ea99e49800002810190508360ff16858302901c9150816731880f2214b6e00002810190508360ff16858302901c91508167025bcff56eb3600002810190508360ff16858302901c915081661b722e10ab100002810190508360ff16858302901c9150816601317c7007700002810190508360ff16858302901c915081650cba84aafa0002810190508360ff16858302901c9150816482573a0a0002810190508360ff16858302901c9150816405035ad90002810190508360ff16858302901c915081632f881b0002810190508360ff16858302901c9150816301b2934002810190508360ff16858302901c915081620efc4002810190508360ff16858302901c915081617fe002810190508360ff16858302901c91508161042002810190508360ff16858302901c915081602102810190508360ff16858302901c915081600102810190508360ff166001901b856f0688589cc0e9505e2f2fee558000000083816134fa57fe5b04010195945050505050565b600061226a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506124b3565b6135528282612784565b156135a4576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6135d38282612784565b61360e5760405162461bcd60e51b81526004018080602001828103825260218152602001806139626021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006101b6543a111561363f57fe5b600061364a836117f7565b90506136568482612151565b604080518281526020810185905281516001600160a01b038716927f65ab8b57af027ad387b3f608b0745de61b7dc81d07be6ded03736db32fe46bd9928290030190a29392505050565b60006101b6543a11156136af57fe5b60006136ba8361133d565b90506136c684846125a4565b604080518481526020810183905281516001600160a01b038716927f14feb1b32dbb3ebf172a72bc6b201cb3ddcd8dd148da8b8ac41207f2d69bdd32928290030190a29392505050565b600080610100831015613738575b600183111561373357600192831c920161371e565b611362565b60805b60ff81161561376a57600160ff82161b841061375f5760ff81169390931c92908117905b60011c607f1661373b565b5092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106137b257805160ff19168380011785556137df565b828001600101855582156137df579182015b828111156137df5782518255916020019190600101906137c4565b506137eb9291506137ef565b5090565b610c6891905b808211156137eb57600081556001016137f556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734661696c65643a20496e737566696369656e742066756e647320666f7220646f6e6174696f6e20616d6f756e742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f20616464726573734552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f7220726566756e642e4552433230426f6e64696e67546f6b656e3a20496e737566696369656e742066756e647320666f722073616c6520616d6f756e742e45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c655468697320697320616e2061646d696e2066756e6374696f6e0000000000000045524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644661696c65643a20416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63654552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f72206275726e2e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f72206d696e742e4552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f7220696e7469616c20706f6f6c2e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158200b6c0618cfcdf76a658a092ac100b726a128964e24bb7a12f6d3b1a6e818197764736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102bb5760003560e01c80638da5cb5b11610182578063bb4bcffc116100e9578063d96a094a116100a2578063f14faf6f1161007c578063f14faf6f14610b8a578063f4325d6714610ba7578063f5cd1e5b14610baf578063fe173b9714610bcc576102bb565b8063d96a094a14610b22578063dd62ed3e14610b3f578063e4849b3214610b6d576102bb565b8063bb4bcffc14610943578063bf1fe42014610969578063bf73815314610986578063c4d66de81461098e578063c58d1ba9146109b4578063d26bd3e0146109bc576102bb565b80639e40524c1161013b5780639e40524c14610880578063a457c2d714610888578063a9059cbb146108b4578063aa271e1a146108e0578063abfd231d14610906578063ac3b8c5b1461093b576102bb565b80638da5cb5b1461080557806391e32f5e1461080d57806395d89b411461082d578063983b2d5614610835578063986502751461085b5780639a4f318b14610863576102bb565b806340c10f191161022657806370a08231116101df57806370a08231146106fc57806379c1b4501461072257806379cc67901461075f57806384f2b3841461078b5780638cdecb04146107b15780638d265d13146107b9576102bb565b806340c10f191461061e57806342966c681461064a578063498e84f41461066757806349f9b0f71461068b57806354fd4d50146106c05780636d6f1e01146106df576102bb565b80631da6bbfb116102785780631da6bbfb1461051757806323b872dd1461054c578063278ecde11461058257806329a00e7c1461059f578063313ce567146105d457806339509351146105f2576102bb565b806306fdde03146102c0578063095ea7b31461033d5780630c7d5cd81461037d5780631624f6c61461039e57806318160ddd146104ce5780631cafa218146104e8575b600080fd5b6102c8610bd4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103025781810151838201526020016102ea565b50505050905090810190601f16801561032f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561035357600080fd5b506001600160a01b038135169060200135610c6b565b604080519115158252519081900360200190f35b610385610c89565b6040805163ffffffff9092168252519081900360200190f35b6104cc600480360360608110156103b457600080fd5b810190602081018135600160201b8111156103ce57600080fd5b8201836020820111156103e057600080fd5b803590602001918460018302840111600160201b8311171561040157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561045357600080fd5b82018360208201111561046557600080fd5b803590602001918460018302840111600160201b8311171561048657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff169150610c969050565b005b6104d6610d72565b60408051918252519081900360200190f35b6104cc600480360360608110156104fe57600080fd5b5080359063ffffffff6020820135169060400135610d78565b6104d66004803603608081101561052d57600080fd5b5080359060208101359063ffffffff6040820135169060600135610e42565b6103696004803603606081101561056257600080fd5b506001600160a01b03813581169160208101359091169060400135610f21565b6104cc6004803603602081101561059857600080fd5b5035610fae565b6104d6600480360360808110156105b557600080fd5b5080359060208101359063ffffffff60408201351690606001356110b2565b6105dc611183565b6040805160ff9092168252519081900360200190f35b6103696004803603604081101561060857600080fd5b506001600160a01b03813516906020013561118c565b6103696004803603604081101561063457600080fd5b506001600160a01b0381351690602001356111e0565b6104cc6004803603602081101561066057600080fd5b5035611237565b61066f611248565b604080516001600160a01b039092168252519081900360200190f35b6104d6600480360360808110156106a157600080fd5b5080359060208101359063ffffffff6040820135169060600135611258565b6106c8611332565b6040805161ffff9092168252519081900360200190f35b6104d6600480360360208110156106f557600080fd5b503561133d565b6104d66004803603602081101561071257600080fd5b50356001600160a01b031661136a565b6104d6600480360360a081101561073857600080fd5b5080359063ffffffff60208201358116916040810135916060820135169060800135611385565b6104cc6004803603604081101561077557600080fd5b506001600160a01b03813516906020013561148f565b6104cc600480360360208110156107a157600080fd5b50356001600160a01b031661149d565b6104d6611513565b6104cc600480360360c08110156107cf57600080fd5b506001600160a01b03813581169160208101359160408201359163ffffffff6060820135169160808201359160a001351661151a565b61066f6116b6565b6104cc6004803603602081101561082357600080fd5b503560ff166116cb565b6102c8611735565b6104cc6004803603602081101561084b57600080fd5b50356001600160a01b0316611796565b6104cc6117e5565b6104d66004803603602081101561087957600080fd5b50356117f7565b6105dc61181c565b6103696004803603604081101561089e57600080fd5b506001600160a01b038135169060200135611826565b610369600480360360408110156108ca57600080fd5b506001600160a01b038135169060200135611894565b610369600480360360208110156108f657600080fd5b50356001600160a01b03166118a8565b6104d66004803603608081101561091c57600080fd5b5080359060208101359063ffffffff60408201351690606001356118bb565b6104d6611946565b6104cc6004803603602081101561095957600080fd5b50356001600160a01b03166119cd565b6104cc6004803603602081101561097f57600080fd5b5035611a43565b6104cc611a9c565b6104cc600480360360208110156109a457600080fd5b50356001600160a01b0316611b1c565b6104d6611bc7565b6104cc60048036036101208110156109d357600080fd5b6001600160a01b03823581169260208101359260408201359263ffffffff6060840135169260808101359260a08201359092169181019060e0810160c0820135600160201b811115610a2457600080fd5b820183602082011115610a3657600080fd5b803590602001918460018302840111600160201b83111715610a5757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610aa957600080fd5b820183602082011115610abb57600080fd5b803590602001918460018302840111600160201b83111715610adc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff169150611c139050565b6104cc60048036036020811015610b3857600080fd5b5035611cd7565b6104d660048036036040811015610b5557600080fd5b506001600160a01b0381358116916020013516611de1565b6104cc60048036036020811015610b8357600080fd5b5035611e0c565b6104cc60048036036020811015610ba057600080fd5b5035611f5c565b61066f611feb565b6104cc60048036036020811015610bc557600080fd5b5035611ffb565b6104d6612054565b60338054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b505050505090505b90565b6000610c7f610c7861205b565b848461205f565b5060015b92915050565b6101b55463ffffffff1681565b600054610100900460ff1680610caf5750610caf61214b565b80610cbd575060005460ff16155b610cf85760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015610d23576000805460ff1961ff0019909116610100171660011790555b8351610d36906033906020870190613771565b508251610d4a906034906020860190613771565b506035805460ff191660ff84161790558015610d6c576000805461ff00191690555b50505050565b606a5490565b600054610100900460ff1680610d915750610d9161214b565b80610d9f575060005460ff16155b610dda5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015610e05576000805460ff1961ff0019909116610100171660011790555b6101b5805463ffffffff191663ffffffff85161790556101b6829055610e2b3385612151565b8015610d6c576000805461ff001916905550505050565b60008085118015610e535750600084115b8015610e65575060018363ffffffff16115b8015610e7a5750621e848063ffffffff841611155b610e8357600080fd5b81610e9057506000610f19565b63ffffffff8316620f42401415610ec757846001610eb4848763ffffffff61224316565b0381610ebc57fe5b046001019050610f19565b60008080610edb888663ffffffff61227116565b9050610eec8189620f424089612283565b9093509150600060ff83166001610f098a8763ffffffff61224316565b03901c8890036001019450505050505b949350505050565b6000610f2e848484612355565b610fa484610f3a61205b565b610f9f856040518060600160405280602881526020016139a3602891396001600160a01b038a16600090815260696020526040812090610f7861205b565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6124b316565b61205f565b5060019392505050565b60008111610fed5760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b6101b754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561104857600080fd5b505af115801561105c573d6000803e3d6000fd5b505050506040513d602081101561107257600080fd5b50516110af5760405162461bcd60e51b815260040180806020018281038252603881526020018061389f6038913960400191505060405180910390fd5b50565b600080851180156110c35750600084115b80156110d5575060008363ffffffff16115b80156110ea5750620f424063ffffffff841611155b6110f357600080fd5b8161110057506000610f19565b63ffffffff8316620f424014156111315783611122868463ffffffff61224316565b8161112957fe5b049050610f19565b60008080611145858863ffffffff61227116565b9050611156818888620f4240612283565b9093509150600060ff83166111718a8663ffffffff61224316565b901c9890980398975050505050505050565b60355460ff1690565b6000610c7f61119961205b565b84610f9f85606960006111aa61205b565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61254a16565b60006111f26111ed61205b565b6118a8565b61122d5760405162461bcd60e51b81526004018080602001828103825260308152602001806139326030913960400191505060405180910390fd5b610c7f8383612151565b6110af61124261205b565b826125a4565b6101b8546001600160a01b031681565b600080851180156112695750600084115b801561127b575060008363ffffffff16115b80156112905750620f424063ffffffff841611155b801561129c5750848211155b6112a557600080fd5b816112b257506000610f19565b848214156112c1575082610f19565b63ffffffff8316620f424014156112e35784611122858463ffffffff61224316565b6000808387036112f88882620f424089612283565b9093509150600061130f888563ffffffff61224316565b905060ff831688901b848183038161132357fe5b049a9950505050505050505050565b6101345461ffff1681565b600061136261134a610d72565b611352611bc7565b6101b55463ffffffff1685611258565b90505b919050565b6001600160a01b031660009081526068602052604090205490565b6000808611801561139c575060008563ffffffff16115b80156113b15750620f424063ffffffff861611155b80156113bd5750600084115b80156113cf575060008363ffffffff16115b80156113e45750620f424063ffffffff841611155b6113ed57600080fd5b8263ffffffff168563ffffffff16141561143057611411868363ffffffff61227116565b611421858463ffffffff61224316565b8161142857fe5b049050611486565b60008080611444898663ffffffff61227116565b9050611452818a8a89612283565b90935091506000611469888563ffffffff61224316565b905060ff831688901b848183038161147d57fe5b04955050505050505b95945050505050565b61149982826126a0565b5050565b6101ba5461010090046001600160a01b031633146114f0576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b780546001600160a01b0319166001600160a01b0392909216919091179055565b6101b95481565b600054610100900460ff1680611533575061153361214b565b80611541575060005460ff16155b61157c5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff161580156115a7576000805460ff1961ff0019909116610100171660011790555b6101b780546001600160a01b03808a166001600160a01b031992831617928390556101b88054868316931692909217909155604080516323b872dd60e01b8152336004820152306024820152604481018a9052905192909116916323b872dd916064808201926020929091908290030181600087803b15801561162957600080fd5b505af115801561163d573d6000803e3d6000fd5b505050506040513d602081101561165357600080fd5b50516116905760405162461bcd60e51b815260040180806020018281038252603d815260200180613b3e603d913960400191505060405180910390fd5b61169b858585610d78565b80156116ad576000805461ff00191690555b50505050505050565b6101ba5461010090046001600160a01b031681565b6101ba5461010090046001600160a01b0316331461171e576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101ba805460ff191660ff92909216919091179055565b60348054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c605780601f10610c3557610100808354040283529160200191610c60565b6117a16111ed61205b565b6117dc5760405162461bcd60e51b81526004018080602001828103825260308152602001806139326030913960400191505060405180910390fd5b6110af816126f4565b6117f56117f061205b565b61273c565b565b6000611362611804610d72565b61180c611bc7565b6101b55463ffffffff16856110b2565b6101ba5460ff1681565b6000610c7f61183361205b565b84610f9f85604051806060016040528060258152602001613b7b602591396069600061185d61205b565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6124b316565b6000610c7f6118a161205b565b8484612355565b6000611362609d8363ffffffff61278416565b600080851180156118cc5750600084115b80156118de575060018363ffffffff16115b80156118f35750621e848063ffffffff841611155b80156118ff5750848211155b61190857600080fd5b8161191557506000610f19565b84821415611924575082610f19565b63ffffffff8316620f424014156112e35784611122838663ffffffff61224316565b6101b7546101b854604080516370a0823160e01b81526001600160a01b039283166004820152905160009392909216916370a0823191602480820192602092909190829003018186803b15801561199c57600080fd5b505afa1580156119b0573d6000803e3d6000fd5b505050506040513d60208110156119c657600080fd5b5051905090565b6101ba5461010090046001600160a01b03163314611a20576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b880546001600160a01b0319166001600160a01b0392909216919091179055565b6101ba5461010090046001600160a01b03163314611a96576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b655565b6101ba5461010090046001600160a01b03163314611aef576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6040513390303180156108fc02916000818181858888f193505050501580156110af573d6000803e3d6000fd5b600054610100900460ff1680611b355750611b3561214b565b80611b43575060005460ff16155b611b7e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015611ba9576000805460ff1961ff0019909116610100171660011790555b611bb2826127eb565b8015611499576000805461ff00191690555050565b6101b754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561199c57600080fd5b600054610100900460ff1680611c2c5750611c2c61214b565b80611c3a575060005460ff16155b611c755760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015611ca0576000805460ff1961ff0019909116610100171660011790555b611cae8a8a8a8a8a8a61151a565b611cb9848484610c96565b8015611ccb576000805461ff00191690555b50505050505050505050565b60008111611d165760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b6101b754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b158015611d7157600080fd5b505af1158015611d85573d6000803e3d6000fd5b505050506040513d6020811015611d9b57600080fd5b5051611dd85760405162461bcd60e51b8152600401808060200182810382526036815260200180613b086036913960400191505060405180910390fd5b6114998161288e565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205490565b60008111611e4b5760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b80611e553361136a565b1015611e925760405162461bcd60e51b81526004018080602001828103825260358152602001806138d76035913960400191505060405180910390fd5b6000611e9d8261289a565b6101b7546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b158015611ef557600080fd5b505af1158015611f09573d6000803e3d6000fd5b505050506040513d6020811015611f1f57600080fd5b50516114995760405162461bcd60e51b8152600401808060200182810382526036815260200180613a686036913960400191505060405180910390fd5b60008111611f9b5760405162461bcd60e51b8152600401808060200182810382526029815260200180613a1b6029913960400191505060405180910390fd5b80611fa53361136a565b1015611fe25760405162461bcd60e51b815260040180806020018281038252602e81526020018061382d602e913960400191505060405180910390fd5b6114998161289a565b6101b7546001600160a01b031681565b6101ba5461010090046001600160a01b0316331461204e576040805162461bcd60e51b81526020600482015260196024820152600080516020613983833981519152604482015290519081900360640190fd5b6101b955565b6101b65481565b3390565b6001600160a01b0383166120a45760405162461bcd60e51b8152600401808060200182810382526024815260200180613ae46024913960400191505060405180910390fd5b6001600160a01b0382166120e95760405162461bcd60e51b815260040180806020018281038252602281526020018061387d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260696020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b0382166121ac576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b606a546121bf908263ffffffff61254a16565b606a556001600160a01b0382166000908152606860205260409020546121eb908263ffffffff61254a16565b6001600160a01b03831660008181526068602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008261225257506000610c83565b8282028284828161225f57fe5b041461226a57600080fd5b9392505050565b60008282018381101561226a57600080fd5b600080600160811b861061229657600080fd5b600080866001607f1b8902816122a857fe5b04905070015bf0a8b1457695355fb8ac404e7a79e38110156122d4576122cd816128a6565b91506122e0565b6122dd81612c88565b91505b60008563ffffffff168763ffffffff168402816122f957fe5b049050600160831b81101561231f5761231181612d32565b607f9450945050505061234c565b600061232a826130d6565b905061233f81607f0360ff1683901c82613169565b9550935061234c92505050565b94509492505050565b6001600160a01b03831661239a5760405162461bcd60e51b8152600401808060200182810382526025815260200180613abf6025913960400191505060405180910390fd5b6001600160a01b0382166123df5760405162461bcd60e51b815260040180806020018281038252602381526020018061380a6023913960400191505060405180910390fd5b6124228160405180606001604052806026815260200161390c602691396001600160a01b038616600090815260686020526040902054919063ffffffff6124b316565b6001600160a01b038085166000908152606860205260408082209390935590841681522054612457908263ffffffff61254a16565b6001600160a01b0380841660008181526068602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156125425760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125075781810151838201526020016124ef565b50505050905090810190601f1680156125345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561226a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166125e95760405162461bcd60e51b8152600401808060200182810382526021815260200180613a9e6021913960400191505060405180910390fd5b61262c8160405180606001604052806022815260200161385b602291396001600160a01b038516600090815260686020526040902054919063ffffffff6124b316565b6001600160a01b038316600090815260686020526040902055606a54612658908263ffffffff61350616565b606a556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6126aa82826125a4565b611499826126b661205b565b610f9f84604051806060016040528060248152602001613a44602491396001600160a01b038816600090815260696020526040812090610f7861205b565b612705609d8263ffffffff61354816565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61274d609d8263ffffffff6135c916565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166127cb5760405162461bcd60e51b81526004018080602001828103825260228152602001806139cb6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff1680612804575061280461214b565b80612812575060005460ff16155b61284d5760405162461bcd60e51b815260040180806020018281038252602e8152602001806139ed602e913960400191505060405180910390fd5b600054610100900460ff16158015612878576000805460ff1961ff0019909116610100171660011790555b612881826118a8565b611bb257611bb2826126f4565b60006113623383613630565b600061136233836136a0565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd886106128ef576001607e1b840193506fd3094c70f034de4b96ff7d5b6f99fcd86001607f1b8702816128eb57fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a78610612932576001607d1b840193506fa45af1e1f40c333b3de1db4dd55f29a76001607f1b87028161292e57fe5b0495505b6f910b022db7ae67ce76b441c27035c6a18610612975576001607c1b840193506f910b022db7ae67ce76b441c27035c6a16001607f1b87028161297157fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886106129b8576001607b1b840193506f88415abbe9a76bead8d00cf112e4d4a86001607f1b8702816129b457fe5b0495505b6f84102b00893f64c705e841d5d4064bd386106129fb576001607a1b840193506f84102b00893f64c705e841d5d4064bd36001607f1b8702816129f757fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a28610612a3e57600160791b840193506f8204055aaef1c8bd5c3259f4822735a26001607f1b870281612a3a57fe5b0495505b6f810100ab00222d861931c15e39b44e998610612a8157600160781b840193506f810100ab00222d861931c15e39b44e996001607f1b870281612a7d57fe5b0495505b6f808040155aabbbe9451521693554f7338610612ac457600160771b840193506f808040155aabbbe9451521693554f7336001607f1b870281612ac057fe5b0495505b6f7fffffffffffffffffffffffffffffff19860192508291506001607f1b828002049050600160801b838103830204840193506001607f1b81830281612b0657fe5b049150600160811b836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa03830281612b2a57fe5b04840193506001607f1b81830281612b3e57fe5b049150600360801b836f9999999999999999999999999999999903830281612b6257fe5b04840193506001607f1b81830281612b7657fe5b049150600160821b836f9249249249249249249249249249249203830281612b9a57fe5b04840193506001607f1b81830281612bae57fe5b049150600560801b836f8e38e38e38e38e38e38e38e38e38e38e03830281612bd257fe5b04840193506001607f1b81830281612be657fe5b049150600360811b836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281612c0a57fe5b04840193506001607f1b81830281612c1e57fe5b049150600760801b836f89d89d89d89d89d89d89d89d89d89d8903830281612c4257fe5b04840193506001607f1b81830281612c5657fe5b049150600160831b836f8888888888888888888888888888888803830281612c7a57fe5b049390930195945050505050565b600080600160801b8310612cb8576000612ca76001607f1b8504613710565b60ff1693841c936001607f1b029150505b6001607f1b831115612d0657607f5b60ff811615612d04576001607f1b848002049350600160801b8410612cfb57600193841c9360ff6000198301161b91909101905b60001901612cc7565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f88202049392505050565b6000670168244fdac780006001607f1b6f0fffffffffffffffffffffffffffffff84168080028290048082028390048083028490049485026710e1b3be415a00009092026705a0913f6b1e000091909102010192909181830204905080664807432bc1800002830192506001607f1b82820281612dab57fe5b04905080660c0135dca0400002830192506001607f1b82820281612dcb57fe5b049050806601b707b1cdc00002830192506001607f1b82820281612deb57fe5b049050806536e0f639b80002830192506001607f1b82820281612e0a57fe5b04905080650618fee9f80002830192506001607f1b82820281612e2957fe5b04905080649c197dcc0002830192506001607f1b82820281612e4757fe5b04905080640e30dce40002830192506001607f1b82820281612e6557fe5b0490508064012ebd130002830192506001607f1b82820281612e8357fe5b049050806317499f0002830192506001607f1b82820281612ea057fe5b049050806301a9d48002830192506001607f1b82820281612ebd57fe5b04905080621c638002830192506001607f1b82820281612ed957fe5b049050806201c63802830192506001607f1b82820281612ef557fe5b04905080611ab802830192506001607f1b82820281612f1057fe5b0490508061017c02830192506001607f1b82820281612f2b57fe5b04905080601402830192506001607f1b82820281612f4557fe5b6721c3677c82b400009190049384010482016001607f1b019290506001607c1b851615612f965770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f984020492505b6001607d1b851615612fcc577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884020492505b6001607e1b851615613001576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed584020492505b6001607f1b851615613035576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e84020492505b600160801b851615613069576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c584020492505b600160811b85161561309c576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d784020492505b600160821b8516156130cd576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30784020492505b50909392505050565b60006020607f5b8060ff168260010160ff161015613126576000600260ff84840116049050846101358260ff166080811061310d57fe5b01541061311c57809250613120565b8091505b506130dd565b836101358260ff166080811061313857fe5b0154106131485791506113659050565b836101358360ff166080811061315a57fe5b0154106102bb57509050611365565b60008083905060008090508360ff16858302901c9150816f03442c4e6074a82f1797f72ac000000002810190508360ff16858302901c9150816f0116b96f757c380fb287fd0e4000000002810190508360ff16858302901c9150816e45ae5bdd5f0e03eca1ff439000000002810190508360ff16858302901c9150816e0defabf91302cd95b9ffda5000000002810190508360ff16858302901c9150816e02529ca9832b22439efff9b800000002810190508360ff16858302901c9150816d54f1cf12bd04e516b6da8800000002810190508360ff16858302901c9150816d0a9e39e257a09ca2d6db5100000002810190508360ff16858302901c9150816d012e066e7b839fa050c30900000002810190508360ff16858302901c9150816c1e33d7d926c329a1ad1a80000002810190508360ff16858302901c9150816c02bee513bdb4a6b19b5f80000002810190508360ff16858302901c9150816b3a9316fa79b88eccf2a0000002810190508360ff16858302901c9150816b048177ebe1fa81237520000002810190508360ff16858302901c9150816a5263fe90242dcbacf0000002810190508360ff16858302901c9150816a057e22099c030d9410000002810190508360ff16858302901c9150816957e22099c030d941000002810190508360ff16858302901c91508169052b6b5456997631000002810190508360ff16858302901c915081684985f67696bf74800002810190508360ff16858302901c9150816803dea12ea99e49800002810190508360ff16858302901c9150816731880f2214b6e00002810190508360ff16858302901c91508167025bcff56eb3600002810190508360ff16858302901c915081661b722e10ab100002810190508360ff16858302901c9150816601317c7007700002810190508360ff16858302901c915081650cba84aafa0002810190508360ff16858302901c9150816482573a0a0002810190508360ff16858302901c9150816405035ad90002810190508360ff16858302901c915081632f881b0002810190508360ff16858302901c9150816301b2934002810190508360ff16858302901c915081620efc4002810190508360ff16858302901c915081617fe002810190508360ff16858302901c91508161042002810190508360ff16858302901c915081602102810190508360ff16858302901c915081600102810190508360ff166001901b856f0688589cc0e9505e2f2fee558000000083816134fa57fe5b04010195945050505050565b600061226a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506124b3565b6135528282612784565b156135a4576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6135d38282612784565b61360e5760405162461bcd60e51b81526004018080602001828103825260218152602001806139626021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006101b6543a111561363f57fe5b600061364a836117f7565b90506136568482612151565b604080518281526020810185905281516001600160a01b038716927f65ab8b57af027ad387b3f608b0745de61b7dc81d07be6ded03736db32fe46bd9928290030190a29392505050565b60006101b6543a11156136af57fe5b60006136ba8361133d565b90506136c684846125a4565b604080518481526020810183905281516001600160a01b038716927f14feb1b32dbb3ebf172a72bc6b201cb3ddcd8dd148da8b8ac41207f2d69bdd32928290030190a29392505050565b600080610100831015613738575b600183111561373357600192831c920161371e565b611362565b60805b60ff81161561376a57600160ff82161b841061375f5760ff81169390931c92908117905b60011c607f1661373b565b5092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106137b257805160ff19168380011785556137df565b828001600101855582156137df579182015b828111156137df5782518255916020019190600101906137c4565b506137eb9291506137ef565b5090565b610c6891905b808211156137eb57600081556001016137f556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734661696c65643a20496e737566696369656e742066756e647320666f7220646f6e6174696f6e20616d6f756e742e45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f20616464726573734552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f7220726566756e642e4552433230426f6e64696e67546f6b656e3a20496e737566696369656e742066756e647320666f722073616c6520616d6f756e742e45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c655468697320697320616e2061646d696e2066756e6374696f6e0000000000000045524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644661696c65643a20416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e63654552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f72206275726e2e45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f72206d696e742e4552433230426f6e64696e67546f6b656e3a204661696c656420746f207472616e7366657220746f6b656e7320666f7220696e7469616c20706f6f6c2e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158200b6c0618cfcdf76a658a092ac100b726a128964e24bb7a12f6d3b1a6e818197764736f6c63430005100032",
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Darwin.appleclang",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
